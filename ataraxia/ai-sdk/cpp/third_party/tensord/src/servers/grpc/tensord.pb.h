// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: servers/grpc/tensord.proto

#ifndef PROTOBUF_INCLUDED_servers_2fgrpc_2ftensord_2eproto
#define PROTOBUF_INCLUDED_servers_2fgrpc_2ftensord_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_servers_2fgrpc_2ftensord_2eproto 

namespace protobuf_servers_2fgrpc_2ftensord_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_servers_2fgrpc_2ftensord_2eproto
namespace tensord {
namespace grpc {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class Requests;
class RequestsDefaultTypeInternal;
extern RequestsDefaultTypeInternal _Requests_default_instance_;
class Requests_Request;
class Requests_RequestDefaultTypeInternal;
extern Requests_RequestDefaultTypeInternal _Requests_Request_default_instance_;
class Responses;
class ResponsesDefaultTypeInternal;
extern ResponsesDefaultTypeInternal _Responses_default_instance_;
class Responses_Response;
class Responses_ResponseDefaultTypeInternal;
extern Responses_ResponseDefaultTypeInternal _Responses_Response_default_instance_;
}  // namespace grpc
}  // namespace tensord
namespace google {
namespace protobuf {
template<> ::tensord::grpc::Data* Arena::CreateMaybeMessage<::tensord::grpc::Data>(Arena*);
template<> ::tensord::grpc::Requests* Arena::CreateMaybeMessage<::tensord::grpc::Requests>(Arena*);
template<> ::tensord::grpc::Requests_Request* Arena::CreateMaybeMessage<::tensord::grpc::Requests_Request>(Arena*);
template<> ::tensord::grpc::Responses* Arena::CreateMaybeMessage<::tensord::grpc::Responses>(Arena*);
template<> ::tensord::grpc::Responses_Response* Arena::CreateMaybeMessage<::tensord::grpc::Responses_Response>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensord {
namespace grpc {

// ===================================================================

class Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensord.grpc.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Data* other);
  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const final {
    return CreateMaybeMessage<Data>(NULL);
  }

  Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes body = 2;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:tensord.grpc.Data)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_servers_2fgrpc_2ftensord_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Requests_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensord.grpc.Requests.Request) */ {
 public:
  Requests_Request();
  virtual ~Requests_Request();

  Requests_Request(const Requests_Request& from);

  inline Requests_Request& operator=(const Requests_Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Requests_Request(Requests_Request&& from) noexcept
    : Requests_Request() {
    *this = ::std::move(from);
  }

  inline Requests_Request& operator=(Requests_Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Requests_Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Requests_Request* internal_default_instance() {
    return reinterpret_cast<const Requests_Request*>(
               &_Requests_Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Requests_Request* other);
  friend void swap(Requests_Request& a, Requests_Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Requests_Request* New() const final {
    return CreateMaybeMessage<Requests_Request>(NULL);
  }

  Requests_Request* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Requests_Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Requests_Request& from);
  void MergeFrom(const Requests_Request& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Requests_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensord.grpc.Data data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::tensord::grpc::Data* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >*
      mutable_data();
  const ::tensord::grpc::Data& data(int index) const;
  ::tensord::grpc::Data* add_data();
  const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >&
      data() const;

  // @@protoc_insertion_point(class_scope:tensord.grpc.Requests.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_servers_2fgrpc_2ftensord_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Requests : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensord.grpc.Requests) */ {
 public:
  Requests();
  virtual ~Requests();

  Requests(const Requests& from);

  inline Requests& operator=(const Requests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Requests(Requests&& from) noexcept
    : Requests() {
    *this = ::std::move(from);
  }

  inline Requests& operator=(Requests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Requests& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Requests* internal_default_instance() {
    return reinterpret_cast<const Requests*>(
               &_Requests_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Requests* other);
  friend void swap(Requests& a, Requests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Requests* New() const final {
    return CreateMaybeMessage<Requests>(NULL);
  }

  Requests* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Requests>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Requests& from);
  void MergeFrom(const Requests& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Requests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Requests_Request Request;

  // accessors -------------------------------------------------------

  // repeated .tensord.grpc.Requests.Request request = 3;
  int request_size() const;
  void clear_request();
  static const int kRequestFieldNumber = 3;
  ::tensord::grpc::Requests_Request* mutable_request(int index);
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Requests_Request >*
      mutable_request();
  const ::tensord::grpc::Requests_Request& request(int index) const;
  ::tensord::grpc::Requests_Request* add_request();
  const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Requests_Request >&
      request() const;

  // string model = 1;
  void clear_model();
  static const int kModelFieldNumber = 1;
  const ::std::string& model() const;
  void set_model(const ::std::string& value);
  #if LANG_CXX11
  void set_model(::std::string&& value);
  #endif
  void set_model(const char* value);
  void set_model(const char* value, size_t size);
  ::std::string* mutable_model();
  ::std::string* release_model();
  void set_allocated_model(::std::string* model);

  // int32 version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tensord.grpc.Requests)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Requests_Request > request_;
  ::google::protobuf::internal::ArenaStringPtr model_;
  ::google::protobuf::int32 version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_servers_2fgrpc_2ftensord_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Responses_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensord.grpc.Responses.Response) */ {
 public:
  Responses_Response();
  virtual ~Responses_Response();

  Responses_Response(const Responses_Response& from);

  inline Responses_Response& operator=(const Responses_Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Responses_Response(Responses_Response&& from) noexcept
    : Responses_Response() {
    *this = ::std::move(from);
  }

  inline Responses_Response& operator=(Responses_Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Responses_Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Responses_Response* internal_default_instance() {
    return reinterpret_cast<const Responses_Response*>(
               &_Responses_Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Responses_Response* other);
  friend void swap(Responses_Response& a, Responses_Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Responses_Response* New() const final {
    return CreateMaybeMessage<Responses_Response>(NULL);
  }

  Responses_Response* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Responses_Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Responses_Response& from);
  void MergeFrom(const Responses_Response& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Responses_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensord.grpc.Data data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  ::tensord::grpc::Data* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >*
      mutable_data();
  const ::tensord::grpc::Data& data(int index) const;
  ::tensord::grpc::Data* add_data();
  const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >&
      data() const;

  // @@protoc_insertion_point(class_scope:tensord.grpc.Responses.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_servers_2fgrpc_2ftensord_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Responses : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensord.grpc.Responses) */ {
 public:
  Responses();
  virtual ~Responses();

  Responses(const Responses& from);

  inline Responses& operator=(const Responses& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Responses(Responses&& from) noexcept
    : Responses() {
    *this = ::std::move(from);
  }

  inline Responses& operator=(Responses&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Responses& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Responses* internal_default_instance() {
    return reinterpret_cast<const Responses*>(
               &_Responses_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Responses* other);
  friend void swap(Responses& a, Responses& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Responses* New() const final {
    return CreateMaybeMessage<Responses>(NULL);
  }

  Responses* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Responses>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Responses& from);
  void MergeFrom(const Responses& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Responses* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Responses_Response Response;

  // accessors -------------------------------------------------------

  // repeated .tensord.grpc.Responses.Response response = 3;
  int response_size() const;
  void clear_response();
  static const int kResponseFieldNumber = 3;
  ::tensord::grpc::Responses_Response* mutable_response(int index);
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Responses_Response >*
      mutable_response();
  const ::tensord::grpc::Responses_Response& response(int index) const;
  ::tensord::grpc::Responses_Response* add_response();
  const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Responses_Response >&
      response() const;

  // @@protoc_insertion_point(class_scope:tensord.grpc.Responses)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Responses_Response > response_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_servers_2fgrpc_2ftensord_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Data

// string name = 1;
inline void Data::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Data::name() const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Data.name)
  return name_.GetNoArena();
}
inline void Data::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensord.grpc.Data.name)
}
#if LANG_CXX11
inline void Data::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensord.grpc.Data.name)
}
#endif
inline void Data::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensord.grpc.Data.name)
}
inline void Data::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensord.grpc.Data.name)
}
inline ::std::string* Data::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensord.grpc.Data.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Data::release_name() {
  // @@protoc_insertion_point(field_release:tensord.grpc.Data.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Data::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tensord.grpc.Data.name)
}

// bytes body = 2;
inline void Data::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Data::body() const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Data.body)
  return body_.GetNoArena();
}
inline void Data::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensord.grpc.Data.body)
}
#if LANG_CXX11
inline void Data::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensord.grpc.Data.body)
}
#endif
inline void Data::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensord.grpc.Data.body)
}
inline void Data::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensord.grpc.Data.body)
}
inline ::std::string* Data::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:tensord.grpc.Data.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Data::release_body() {
  // @@protoc_insertion_point(field_release:tensord.grpc.Data.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Data::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:tensord.grpc.Data.body)
}

// -------------------------------------------------------------------

// Requests_Request

// repeated .tensord.grpc.Data data = 1;
inline int Requests_Request::data_size() const {
  return data_.size();
}
inline void Requests_Request::clear_data() {
  data_.Clear();
}
inline ::tensord::grpc::Data* Requests_Request::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:tensord.grpc.Requests.Request.data)
  return data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >*
Requests_Request::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:tensord.grpc.Requests.Request.data)
  return &data_;
}
inline const ::tensord::grpc::Data& Requests_Request::data(int index) const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Requests.Request.data)
  return data_.Get(index);
}
inline ::tensord::grpc::Data* Requests_Request::add_data() {
  // @@protoc_insertion_point(field_add:tensord.grpc.Requests.Request.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >&
Requests_Request::data() const {
  // @@protoc_insertion_point(field_list:tensord.grpc.Requests.Request.data)
  return data_;
}

// -------------------------------------------------------------------

// Requests

// string model = 1;
inline void Requests::clear_model() {
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Requests::model() const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Requests.model)
  return model_.GetNoArena();
}
inline void Requests::set_model(const ::std::string& value) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tensord.grpc.Requests.model)
}
#if LANG_CXX11
inline void Requests::set_model(::std::string&& value) {
  
  model_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tensord.grpc.Requests.model)
}
#endif
inline void Requests::set_model(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tensord.grpc.Requests.model)
}
inline void Requests::set_model(const char* value, size_t size) {
  
  model_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tensord.grpc.Requests.model)
}
inline ::std::string* Requests::mutable_model() {
  
  // @@protoc_insertion_point(field_mutable:tensord.grpc.Requests.model)
  return model_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Requests::release_model() {
  // @@protoc_insertion_point(field_release:tensord.grpc.Requests.model)
  
  return model_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Requests::set_allocated_model(::std::string* model) {
  if (model != NULL) {
    
  } else {
    
  }
  model_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model);
  // @@protoc_insertion_point(field_set_allocated:tensord.grpc.Requests.model)
}

// int32 version = 2;
inline void Requests::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 Requests::version() const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Requests.version)
  return version_;
}
inline void Requests::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:tensord.grpc.Requests.version)
}

// repeated .tensord.grpc.Requests.Request request = 3;
inline int Requests::request_size() const {
  return request_.size();
}
inline void Requests::clear_request() {
  request_.Clear();
}
inline ::tensord::grpc::Requests_Request* Requests::mutable_request(int index) {
  // @@protoc_insertion_point(field_mutable:tensord.grpc.Requests.request)
  return request_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Requests_Request >*
Requests::mutable_request() {
  // @@protoc_insertion_point(field_mutable_list:tensord.grpc.Requests.request)
  return &request_;
}
inline const ::tensord::grpc::Requests_Request& Requests::request(int index) const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Requests.request)
  return request_.Get(index);
}
inline ::tensord::grpc::Requests_Request* Requests::add_request() {
  // @@protoc_insertion_point(field_add:tensord.grpc.Requests.request)
  return request_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Requests_Request >&
Requests::request() const {
  // @@protoc_insertion_point(field_list:tensord.grpc.Requests.request)
  return request_;
}

// -------------------------------------------------------------------

// Responses_Response

// repeated .tensord.grpc.Data data = 1;
inline int Responses_Response::data_size() const {
  return data_.size();
}
inline void Responses_Response::clear_data() {
  data_.Clear();
}
inline ::tensord::grpc::Data* Responses_Response::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:tensord.grpc.Responses.Response.data)
  return data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >*
Responses_Response::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:tensord.grpc.Responses.Response.data)
  return &data_;
}
inline const ::tensord::grpc::Data& Responses_Response::data(int index) const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Responses.Response.data)
  return data_.Get(index);
}
inline ::tensord::grpc::Data* Responses_Response::add_data() {
  // @@protoc_insertion_point(field_add:tensord.grpc.Responses.Response.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Data >&
Responses_Response::data() const {
  // @@protoc_insertion_point(field_list:tensord.grpc.Responses.Response.data)
  return data_;
}

// -------------------------------------------------------------------

// Responses

// repeated .tensord.grpc.Responses.Response response = 3;
inline int Responses::response_size() const {
  return response_.size();
}
inline void Responses::clear_response() {
  response_.Clear();
}
inline ::tensord::grpc::Responses_Response* Responses::mutable_response(int index) {
  // @@protoc_insertion_point(field_mutable:tensord.grpc.Responses.response)
  return response_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Responses_Response >*
Responses::mutable_response() {
  // @@protoc_insertion_point(field_mutable_list:tensord.grpc.Responses.response)
  return &response_;
}
inline const ::tensord::grpc::Responses_Response& Responses::response(int index) const {
  // @@protoc_insertion_point(field_get:tensord.grpc.Responses.response)
  return response_.Get(index);
}
inline ::tensord::grpc::Responses_Response* Responses::add_response() {
  // @@protoc_insertion_point(field_add:tensord.grpc.Responses.response)
  return response_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensord::grpc::Responses_Response >&
Responses::response() const {
  // @@protoc_insertion_point(field_list:tensord.grpc.Responses.response)
  return response_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpc
}  // namespace tensord

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_servers_2fgrpc_2ftensord_2eproto
