// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: forward.proto

#include "forward.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_forward_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ForwardRequest_ForwardData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ForwardResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Response_Confidences;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ForwardRequest;
}  // namespace protobuf_forward_2eproto
namespace tron {
namespace terror_mixup {
class Response_ConfidencesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response_Confidences>
      _instance;
} _Response_Confidences_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
class ForwardRequest_ForwardDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardRequest_ForwardData>
      _instance;
} _ForwardRequest_ForwardData_default_instance_;
class ForwardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardRequest>
      _instance;
} _ForwardRequest_default_instance_;
class ForwardRequestsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardRequests>
      _instance;
} _ForwardRequests_default_instance_;
class ForwardResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardResponse>
      _instance;
} _ForwardResponse_default_instance_;
class ForwardResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardResponses>
      _instance;
} _ForwardResponses_default_instance_;
}  // namespace terror_mixup
}  // namespace tron
namespace protobuf_forward_2eproto {
static void InitDefaultsResponse_Confidences() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tron::terror_mixup::_Response_Confidences_default_instance_;
    new (ptr) ::tron::terror_mixup::Response_Confidences();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tron::terror_mixup::Response_Confidences::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response_Confidences =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse_Confidences}, {}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tron::terror_mixup::_Response_default_instance_;
    new (ptr) ::tron::terror_mixup::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tron::terror_mixup::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResponse}, {
      &protobuf_forward_2eproto::scc_info_Response_Confidences.base,}};

static void InitDefaultsForwardRequest_ForwardData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tron::terror_mixup::_ForwardRequest_ForwardData_default_instance_;
    new (ptr) ::tron::terror_mixup::ForwardRequest_ForwardData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tron::terror_mixup::ForwardRequest_ForwardData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ForwardRequest_ForwardData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsForwardRequest_ForwardData}, {}};

static void InitDefaultsForwardRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tron::terror_mixup::_ForwardRequest_default_instance_;
    new (ptr) ::tron::terror_mixup::ForwardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tron::terror_mixup::ForwardRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForwardRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForwardRequest}, {
      &protobuf_forward_2eproto::scc_info_ForwardRequest_ForwardData.base,}};

static void InitDefaultsForwardRequests() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tron::terror_mixup::_ForwardRequests_default_instance_;
    new (ptr) ::tron::terror_mixup::ForwardRequests();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tron::terror_mixup::ForwardRequests::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForwardRequests =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForwardRequests}, {
      &protobuf_forward_2eproto::scc_info_ForwardRequest.base,}};

static void InitDefaultsForwardResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tron::terror_mixup::_ForwardResponse_default_instance_;
    new (ptr) ::tron::terror_mixup::ForwardResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tron::terror_mixup::ForwardResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ForwardResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsForwardResponse}, {}};

static void InitDefaultsForwardResponses() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tron::terror_mixup::_ForwardResponses_default_instance_;
    new (ptr) ::tron::terror_mixup::ForwardResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tron::terror_mixup::ForwardResponses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForwardResponses =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForwardResponses}, {
      &protobuf_forward_2eproto::scc_info_ForwardResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Response_Confidences.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardRequest_ForwardData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardRequests.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardResponses.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::Response_Confidences, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::Response_Confidences, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::Response_Confidences, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::Response_Confidences, class__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::Response, checkpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::Response, confidences_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardRequest_ForwardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardRequest_ForwardData, det_input_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardRequest_ForwardData, cls_input_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardRequests, requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponse, output_det_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponse, output_fine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponse, output_coarse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponse, batch_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tron::terror_mixup::ForwardResponses, responses_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tron::terror_mixup::Response_Confidences)},
  { 8, -1, sizeof(::tron::terror_mixup::Response)},
  { 15, -1, sizeof(::tron::terror_mixup::ForwardRequest_ForwardData)},
  { 22, -1, sizeof(::tron::terror_mixup::ForwardRequest)},
  { 28, -1, sizeof(::tron::terror_mixup::ForwardRequests)},
  { 34, -1, sizeof(::tron::terror_mixup::ForwardResponse)},
  { 45, -1, sizeof(::tron::terror_mixup::ForwardResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tron::terror_mixup::_Response_Confidences_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tron::terror_mixup::_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tron::terror_mixup::_ForwardRequest_ForwardData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tron::terror_mixup::_ForwardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tron::terror_mixup::_ForwardRequests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tron::terror_mixup::_ForwardResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tron::terror_mixup::_ForwardResponses_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "forward.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rforward.proto\022\021tron.terror_mixup\"\230\001\n\010R"
      "esponse\022\022\n\ncheckpoint\030\001 \001(\t\022<\n\013confidenc"
      "es\030\002 \003(\0132\'.tron.terror_mixup.Response.Co"
      "nfidences\032:\n\013Confidences\022\r\n\005index\030\001 \001(\005\022"
      "\r\n\005score\030\002 \001(\002\022\r\n\005class\030\003 \001(\t\"\202\001\n\016Forwar"
      "dRequest\022;\n\004data\030\001 \001(\0132-.tron.terror_mix"
      "up.ForwardRequest.ForwardData\0323\n\013Forward"
      "Data\022\021\n\tdet_input\030\001 \001(\014\022\021\n\tcls_input\030\002 \001"
      "(\014\"F\n\017ForwardRequests\0223\n\010requests\030\001 \003(\0132"
      "!.tron.terror_mixup.ForwardRequest\"\205\001\n\017F"
      "orwardResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030"
      "\002 \001(\t\022\022\n\noutput_det\030\003 \001(\014\022\023\n\013output_fine"
      "\030\004 \001(\014\022\025\n\routput_coarse\030\005 \001(\014\022\023\n\013batch_i"
      "ndex\030\006 \001(\005\"I\n\020ForwardResponses\0225\n\trespon"
      "ses\030\001 \003(\0132\".tron.terror_mixup.ForwardRes"
      "ponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 613);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "forward.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_forward_2eproto
namespace tron {
namespace terror_mixup {

// ===================================================================

void Response_Confidences::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Confidences::kIndexFieldNumber;
const int Response_Confidences::kScoreFieldNumber;
const int Response_Confidences::kClassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Confidences::Response_Confidences()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_Response_Confidences.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tron.terror_mixup.Response.Confidences)
}
Response_Confidences::Response_Confidences(const Response_Confidences& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  class__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.class_().size() > 0) {
    class__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class__);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&index_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:tron.terror_mixup.Response.Confidences)
}

void Response_Confidences::SharedCtor() {
  class__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&index_)) + sizeof(score_));
}

Response_Confidences::~Response_Confidences() {
  // @@protoc_insertion_point(destructor:tron.terror_mixup.Response.Confidences)
  SharedDtor();
}

void Response_Confidences::SharedDtor() {
  class__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response_Confidences::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response_Confidences::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response_Confidences& Response_Confidences::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_Response_Confidences.base);
  return *internal_default_instance();
}


void Response_Confidences::Clear() {
// @@protoc_insertion_point(message_clear_start:tron.terror_mixup.Response.Confidences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  class__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&index_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool Response_Confidences::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tron.terror_mixup.Response.Confidences)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string class = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_class_()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->class_().data(), static_cast<int>(this->class_().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tron.terror_mixup.Response.Confidences.class"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tron.terror_mixup.Response.Confidences)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tron.terror_mixup.Response.Confidences)
  return false;
#undef DO_
}

void Response_Confidences::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tron.terror_mixup.Response.Confidences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // float score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->score(), output);
  }

  // string class = 3;
  if (this->class_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_().data(), static_cast<int>(this->class_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tron.terror_mixup.Response.Confidences.class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->class_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tron.terror_mixup.Response.Confidences)
}

::google::protobuf::uint8* Response_Confidences::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tron.terror_mixup.Response.Confidences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // float score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->score(), target);
  }

  // string class = 3;
  if (this->class_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->class_().data(), static_cast<int>(this->class_().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tron.terror_mixup.Response.Confidences.class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->class_(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tron.terror_mixup.Response.Confidences)
  return target;
}

size_t Response_Confidences::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tron.terror_mixup.Response.Confidences)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string class = 3;
  if (this->class_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->class_());
  }

  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // float score = 2;
  if (this->score() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response_Confidences::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tron.terror_mixup.Response.Confidences)
  GOOGLE_DCHECK_NE(&from, this);
  const Response_Confidences* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Confidences>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tron.terror_mixup.Response.Confidences)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tron.terror_mixup.Response.Confidences)
    MergeFrom(*source);
  }
}

void Response_Confidences::MergeFrom(const Response_Confidences& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tron.terror_mixup.Response.Confidences)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.class_().size() > 0) {

    class__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.class__);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void Response_Confidences::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tron.terror_mixup.Response.Confidences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Confidences::CopyFrom(const Response_Confidences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tron.terror_mixup.Response.Confidences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Confidences::IsInitialized() const {
  return true;
}

void Response_Confidences::Swap(Response_Confidences* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Confidences::InternalSwap(Response_Confidences* other) {
  using std::swap;
  class__.Swap(&other->class__, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response_Confidences::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kCheckpointFieldNumber;
const int Response::kConfidencesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tron.terror_mixup.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      confidences_(from.confidences_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  checkpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.checkpoint().size() > 0) {
    checkpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkpoint_);
  }
  // @@protoc_insertion_point(copy_constructor:tron.terror_mixup.Response)
}

void Response::SharedCtor() {
  checkpoint_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:tron.terror_mixup.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  checkpoint_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:tron.terror_mixup.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  confidences_.Clear();
  checkpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tron.terror_mixup.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string checkpoint = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checkpoint()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->checkpoint().data(), static_cast<int>(this->checkpoint().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tron.terror_mixup.Response.checkpoint"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tron.terror_mixup.Response.Confidences confidences = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_confidences()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tron.terror_mixup.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tron.terror_mixup.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tron.terror_mixup.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string checkpoint = 1;
  if (this->checkpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkpoint().data(), static_cast<int>(this->checkpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tron.terror_mixup.Response.checkpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->checkpoint(), output);
  }

  // repeated .tron.terror_mixup.Response.Confidences confidences = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->confidences_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->confidences(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tron.terror_mixup.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tron.terror_mixup.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string checkpoint = 1;
  if (this->checkpoint().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->checkpoint().data(), static_cast<int>(this->checkpoint().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tron.terror_mixup.Response.checkpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->checkpoint(), target);
  }

  // repeated .tron.terror_mixup.Response.Confidences confidences = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->confidences_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->confidences(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tron.terror_mixup.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tron.terror_mixup.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tron.terror_mixup.Response.Confidences confidences = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->confidences_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->confidences(static_cast<int>(i)));
    }
  }

  // string checkpoint = 1;
  if (this->checkpoint().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->checkpoint());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tron.terror_mixup.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tron.terror_mixup.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tron.terror_mixup.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tron.terror_mixup.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  confidences_.MergeFrom(from.confidences_);
  if (from.checkpoint().size() > 0) {

    checkpoint_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkpoint_);
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tron.terror_mixup.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tron.terror_mixup.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  CastToBase(&confidences_)->InternalSwap(CastToBase(&other->confidences_));
  checkpoint_.Swap(&other->checkpoint_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardRequest_ForwardData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardRequest_ForwardData::kDetInputFieldNumber;
const int ForwardRequest_ForwardData::kClsInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardRequest_ForwardData::ForwardRequest_ForwardData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardRequest_ForwardData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tron.terror_mixup.ForwardRequest.ForwardData)
}
ForwardRequest_ForwardData::ForwardRequest_ForwardData(const ForwardRequest_ForwardData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  det_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.det_input().size() > 0) {
    det_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.det_input_);
  }
  cls_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cls_input().size() > 0) {
    cls_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cls_input_);
  }
  // @@protoc_insertion_point(copy_constructor:tron.terror_mixup.ForwardRequest.ForwardData)
}

void ForwardRequest_ForwardData::SharedCtor() {
  det_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cls_input_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ForwardRequest_ForwardData::~ForwardRequest_ForwardData() {
  // @@protoc_insertion_point(destructor:tron.terror_mixup.ForwardRequest.ForwardData)
  SharedDtor();
}

void ForwardRequest_ForwardData::SharedDtor() {
  det_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cls_input_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ForwardRequest_ForwardData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardRequest_ForwardData::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardRequest_ForwardData& ForwardRequest_ForwardData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardRequest_ForwardData.base);
  return *internal_default_instance();
}


void ForwardRequest_ForwardData::Clear() {
// @@protoc_insertion_point(message_clear_start:tron.terror_mixup.ForwardRequest.ForwardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  det_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cls_input_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ForwardRequest_ForwardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tron.terror_mixup.ForwardRequest.ForwardData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes det_input = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_det_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes cls_input = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_cls_input()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tron.terror_mixup.ForwardRequest.ForwardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tron.terror_mixup.ForwardRequest.ForwardData)
  return false;
#undef DO_
}

void ForwardRequest_ForwardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tron.terror_mixup.ForwardRequest.ForwardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes det_input = 1;
  if (this->det_input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->det_input(), output);
  }

  // bytes cls_input = 2;
  if (this->cls_input().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->cls_input(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tron.terror_mixup.ForwardRequest.ForwardData)
}

::google::protobuf::uint8* ForwardRequest_ForwardData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tron.terror_mixup.ForwardRequest.ForwardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes det_input = 1;
  if (this->det_input().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->det_input(), target);
  }

  // bytes cls_input = 2;
  if (this->cls_input().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->cls_input(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tron.terror_mixup.ForwardRequest.ForwardData)
  return target;
}

size_t ForwardRequest_ForwardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tron.terror_mixup.ForwardRequest.ForwardData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes det_input = 1;
  if (this->det_input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->det_input());
  }

  // bytes cls_input = 2;
  if (this->cls_input().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->cls_input());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardRequest_ForwardData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tron.terror_mixup.ForwardRequest.ForwardData)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardRequest_ForwardData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardRequest_ForwardData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tron.terror_mixup.ForwardRequest.ForwardData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tron.terror_mixup.ForwardRequest.ForwardData)
    MergeFrom(*source);
  }
}

void ForwardRequest_ForwardData::MergeFrom(const ForwardRequest_ForwardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tron.terror_mixup.ForwardRequest.ForwardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.det_input().size() > 0) {

    det_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.det_input_);
  }
  if (from.cls_input().size() > 0) {

    cls_input_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cls_input_);
  }
}

void ForwardRequest_ForwardData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tron.terror_mixup.ForwardRequest.ForwardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardRequest_ForwardData::CopyFrom(const ForwardRequest_ForwardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tron.terror_mixup.ForwardRequest.ForwardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardRequest_ForwardData::IsInitialized() const {
  return true;
}

void ForwardRequest_ForwardData::Swap(ForwardRequest_ForwardData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardRequest_ForwardData::InternalSwap(ForwardRequest_ForwardData* other) {
  using std::swap;
  det_input_.Swap(&other->det_input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cls_input_.Swap(&other->cls_input_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardRequest_ForwardData::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardRequest::InitAsDefaultInstance() {
  ::tron::terror_mixup::_ForwardRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::tron::terror_mixup::ForwardRequest_ForwardData*>(
      ::tron::terror_mixup::ForwardRequest_ForwardData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardRequest::ForwardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tron.terror_mixup.ForwardRequest)
}
ForwardRequest::ForwardRequest(const ForwardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::tron::terror_mixup::ForwardRequest_ForwardData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:tron.terror_mixup.ForwardRequest)
}

void ForwardRequest::SharedCtor() {
  data_ = NULL;
}

ForwardRequest::~ForwardRequest() {
  // @@protoc_insertion_point(destructor:tron.terror_mixup.ForwardRequest)
  SharedDtor();
}

void ForwardRequest::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void ForwardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardRequest::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardRequest& ForwardRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardRequest.base);
  return *internal_default_instance();
}


void ForwardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:tron.terror_mixup.ForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool ForwardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tron.terror_mixup.ForwardRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tron.terror_mixup.ForwardRequest.ForwardData data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tron.terror_mixup.ForwardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tron.terror_mixup.ForwardRequest)
  return false;
#undef DO_
}

void ForwardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tron.terror_mixup.ForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tron.terror_mixup.ForwardRequest.ForwardData data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tron.terror_mixup.ForwardRequest)
}

::google::protobuf::uint8* ForwardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tron.terror_mixup.ForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tron.terror_mixup.ForwardRequest.ForwardData data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tron.terror_mixup.ForwardRequest)
  return target;
}

size_t ForwardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tron.terror_mixup.ForwardRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .tron.terror_mixup.ForwardRequest.ForwardData data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tron.terror_mixup.ForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tron.terror_mixup.ForwardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tron.terror_mixup.ForwardRequest)
    MergeFrom(*source);
  }
}

void ForwardRequest::MergeFrom(const ForwardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tron.terror_mixup.ForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::tron::terror_mixup::ForwardRequest_ForwardData::MergeFrom(from.data());
  }
}

void ForwardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tron.terror_mixup.ForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardRequest::CopyFrom(const ForwardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tron.terror_mixup.ForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardRequest::IsInitialized() const {
  return true;
}

void ForwardRequest::Swap(ForwardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardRequest::InternalSwap(ForwardRequest* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardRequest::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardRequests::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardRequests::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardRequests::ForwardRequests()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardRequests.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tron.terror_mixup.ForwardRequests)
}
ForwardRequests::ForwardRequests(const ForwardRequests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tron.terror_mixup.ForwardRequests)
}

void ForwardRequests::SharedCtor() {
}

ForwardRequests::~ForwardRequests() {
  // @@protoc_insertion_point(destructor:tron.terror_mixup.ForwardRequests)
  SharedDtor();
}

void ForwardRequests::SharedDtor() {
}

void ForwardRequests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardRequests::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardRequests& ForwardRequests::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardRequests.base);
  return *internal_default_instance();
}


void ForwardRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:tron.terror_mixup.ForwardRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear();
}

bool ForwardRequests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tron.terror_mixup.ForwardRequests)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tron.terror_mixup.ForwardRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tron.terror_mixup.ForwardRequests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tron.terror_mixup.ForwardRequests)
  return false;
#undef DO_
}

void ForwardRequests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tron.terror_mixup.ForwardRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tron.terror_mixup.ForwardRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tron.terror_mixup.ForwardRequests)
}

::google::protobuf::uint8* ForwardRequests::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tron.terror_mixup.ForwardRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tron.terror_mixup.ForwardRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tron.terror_mixup.ForwardRequests)
  return target;
}

size_t ForwardRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tron.terror_mixup.ForwardRequests)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tron.terror_mixup.ForwardRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardRequests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tron.terror_mixup.ForwardRequests)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardRequests* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardRequests>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tron.terror_mixup.ForwardRequests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tron.terror_mixup.ForwardRequests)
    MergeFrom(*source);
  }
}

void ForwardRequests::MergeFrom(const ForwardRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tron.terror_mixup.ForwardRequests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void ForwardRequests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tron.terror_mixup.ForwardRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardRequests::CopyFrom(const ForwardRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tron.terror_mixup.ForwardRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardRequests::IsInitialized() const {
  return true;
}

void ForwardRequests::Swap(ForwardRequests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardRequests::InternalSwap(ForwardRequests* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardRequests::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardResponse::kCodeFieldNumber;
const int ForwardResponse::kMessageFieldNumber;
const int ForwardResponse::kOutputDetFieldNumber;
const int ForwardResponse::kOutputFineFieldNumber;
const int ForwardResponse::kOutputCoarseFieldNumber;
const int ForwardResponse::kBatchIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardResponse::ForwardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tron.terror_mixup.ForwardResponse)
}
ForwardResponse::ForwardResponse(const ForwardResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  output_det_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_det().size() > 0) {
    output_det_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_det_);
  }
  output_fine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_fine().size() > 0) {
    output_fine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_fine_);
  }
  output_coarse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.output_coarse().size() > 0) {
    output_coarse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_coarse_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&batch_index_) -
    reinterpret_cast<char*>(&code_)) + sizeof(batch_index_));
  // @@protoc_insertion_point(copy_constructor:tron.terror_mixup.ForwardResponse)
}

void ForwardResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_det_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_fine_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_coarse_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_index_) -
      reinterpret_cast<char*>(&code_)) + sizeof(batch_index_));
}

ForwardResponse::~ForwardResponse() {
  // @@protoc_insertion_point(destructor:tron.terror_mixup.ForwardResponse)
  SharedDtor();
}

void ForwardResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_det_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_fine_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_coarse_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ForwardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardResponse::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardResponse& ForwardResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardResponse.base);
  return *internal_default_instance();
}


void ForwardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:tron.terror_mixup.ForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_det_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_fine_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_coarse_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_index_) -
      reinterpret_cast<char*>(&code_)) + sizeof(batch_index_));
  _internal_metadata_.Clear();
}

bool ForwardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tron.terror_mixup.ForwardResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tron.terror_mixup.ForwardResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes output_det = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output_det()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes output_fine = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output_fine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes output_coarse = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_output_coarse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 batch_index = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &batch_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tron.terror_mixup.ForwardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tron.terror_mixup.ForwardResponse)
  return false;
#undef DO_
}

void ForwardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tron.terror_mixup.ForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tron.terror_mixup.ForwardResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // bytes output_det = 3;
  if (this->output_det().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->output_det(), output);
  }

  // bytes output_fine = 4;
  if (this->output_fine().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->output_fine(), output);
  }

  // bytes output_coarse = 5;
  if (this->output_coarse().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->output_coarse(), output);
  }

  // int32 batch_index = 6;
  if (this->batch_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->batch_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tron.terror_mixup.ForwardResponse)
}

::google::protobuf::uint8* ForwardResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tron.terror_mixup.ForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tron.terror_mixup.ForwardResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // bytes output_det = 3;
  if (this->output_det().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->output_det(), target);
  }

  // bytes output_fine = 4;
  if (this->output_fine().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->output_fine(), target);
  }

  // bytes output_coarse = 5;
  if (this->output_coarse().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->output_coarse(), target);
  }

  // int32 batch_index = 6;
  if (this->batch_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->batch_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tron.terror_mixup.ForwardResponse)
  return target;
}

size_t ForwardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tron.terror_mixup.ForwardResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bytes output_det = 3;
  if (this->output_det().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->output_det());
  }

  // bytes output_fine = 4;
  if (this->output_fine().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->output_fine());
  }

  // bytes output_coarse = 5;
  if (this->output_coarse().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->output_coarse());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 batch_index = 6;
  if (this->batch_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->batch_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tron.terror_mixup.ForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tron.terror_mixup.ForwardResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tron.terror_mixup.ForwardResponse)
    MergeFrom(*source);
  }
}

void ForwardResponse::MergeFrom(const ForwardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tron.terror_mixup.ForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.output_det().size() > 0) {

    output_det_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_det_);
  }
  if (from.output_fine().size() > 0) {

    output_fine_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_fine_);
  }
  if (from.output_coarse().size() > 0) {

    output_coarse_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_coarse_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.batch_index() != 0) {
    set_batch_index(from.batch_index());
  }
}

void ForwardResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tron.terror_mixup.ForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardResponse::CopyFrom(const ForwardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tron.terror_mixup.ForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardResponse::IsInitialized() const {
  return true;
}

void ForwardResponse::Swap(ForwardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardResponse::InternalSwap(ForwardResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_det_.Swap(&other->output_det_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_fine_.Swap(&other->output_fine_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_coarse_.Swap(&other->output_coarse_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(batch_index_, other->batch_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardResponse::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardResponses::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardResponses::ForwardResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardResponses.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:tron.terror_mixup.ForwardResponses)
}
ForwardResponses::ForwardResponses(const ForwardResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tron.terror_mixup.ForwardResponses)
}

void ForwardResponses::SharedCtor() {
}

ForwardResponses::~ForwardResponses() {
  // @@protoc_insertion_point(destructor:tron.terror_mixup.ForwardResponses)
  SharedDtor();
}

void ForwardResponses::SharedDtor() {
}

void ForwardResponses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardResponses::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardResponses& ForwardResponses::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardResponses.base);
  return *internal_default_instance();
}


void ForwardResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:tron.terror_mixup.ForwardResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool ForwardResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tron.terror_mixup.ForwardResponses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .tron.terror_mixup.ForwardResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tron.terror_mixup.ForwardResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tron.terror_mixup.ForwardResponses)
  return false;
#undef DO_
}

void ForwardResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tron.terror_mixup.ForwardResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tron.terror_mixup.ForwardResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tron.terror_mixup.ForwardResponses)
}

::google::protobuf::uint8* ForwardResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tron.terror_mixup.ForwardResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .tron.terror_mixup.ForwardResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tron.terror_mixup.ForwardResponses)
  return target;
}

size_t ForwardResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tron.terror_mixup.ForwardResponses)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tron.terror_mixup.ForwardResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tron.terror_mixup.ForwardResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tron.terror_mixup.ForwardResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tron.terror_mixup.ForwardResponses)
    MergeFrom(*source);
  }
}

void ForwardResponses::MergeFrom(const ForwardResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tron.terror_mixup.ForwardResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void ForwardResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tron.terror_mixup.ForwardResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardResponses::CopyFrom(const ForwardResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tron.terror_mixup.ForwardResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardResponses::IsInitialized() const {
  return true;
}

void ForwardResponses::Swap(ForwardResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardResponses::InternalSwap(ForwardResponses* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardResponses::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace terror_mixup
}  // namespace tron
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tron::terror_mixup::Response_Confidences* Arena::CreateMaybeMessage< ::tron::terror_mixup::Response_Confidences >(Arena* arena) {
  return Arena::CreateInternal< ::tron::terror_mixup::Response_Confidences >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tron::terror_mixup::Response* Arena::CreateMaybeMessage< ::tron::terror_mixup::Response >(Arena* arena) {
  return Arena::CreateInternal< ::tron::terror_mixup::Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tron::terror_mixup::ForwardRequest_ForwardData* Arena::CreateMaybeMessage< ::tron::terror_mixup::ForwardRequest_ForwardData >(Arena* arena) {
  return Arena::CreateInternal< ::tron::terror_mixup::ForwardRequest_ForwardData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tron::terror_mixup::ForwardRequest* Arena::CreateMaybeMessage< ::tron::terror_mixup::ForwardRequest >(Arena* arena) {
  return Arena::CreateInternal< ::tron::terror_mixup::ForwardRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tron::terror_mixup::ForwardRequests* Arena::CreateMaybeMessage< ::tron::terror_mixup::ForwardRequests >(Arena* arena) {
  return Arena::CreateInternal< ::tron::terror_mixup::ForwardRequests >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tron::terror_mixup::ForwardResponse* Arena::CreateMaybeMessage< ::tron::terror_mixup::ForwardResponse >(Arena* arena) {
  return Arena::CreateInternal< ::tron::terror_mixup::ForwardResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tron::terror_mixup::ForwardResponses* Arena::CreateMaybeMessage< ::tron::terror_mixup::ForwardResponses >(Arena* arena) {
  return Arena::CreateInternal< ::tron::terror_mixup::ForwardResponses >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
