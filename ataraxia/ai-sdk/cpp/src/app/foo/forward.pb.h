// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: forward.proto

#ifndef PROTOBUF_INCLUDED_forward_2eproto
#define PROTOBUF_INCLUDED_forward_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto 

namespace protobuf_forward_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_forward_2eproto
namespace inference {
namespace foo {
class ForwardRequest;
class ForwardRequestDefaultTypeInternal;
extern ForwardRequestDefaultTypeInternal _ForwardRequest_default_instance_;
class ForwardRequest_ForwardData;
class ForwardRequest_ForwardDataDefaultTypeInternal;
extern ForwardRequest_ForwardDataDefaultTypeInternal _ForwardRequest_ForwardData_default_instance_;
class ForwardRequests;
class ForwardRequestsDefaultTypeInternal;
extern ForwardRequestsDefaultTypeInternal _ForwardRequests_default_instance_;
class ForwardResponse;
class ForwardResponseDefaultTypeInternal;
extern ForwardResponseDefaultTypeInternal _ForwardResponse_default_instance_;
class ForwardResponses;
class ForwardResponsesDefaultTypeInternal;
extern ForwardResponsesDefaultTypeInternal _ForwardResponses_default_instance_;
}  // namespace foo
}  // namespace inference
namespace google {
namespace protobuf {
template<> ::inference::foo::ForwardRequest* Arena::CreateMaybeMessage<::inference::foo::ForwardRequest>(Arena*);
template<> ::inference::foo::ForwardRequest_ForwardData* Arena::CreateMaybeMessage<::inference::foo::ForwardRequest_ForwardData>(Arena*);
template<> ::inference::foo::ForwardRequests* Arena::CreateMaybeMessage<::inference::foo::ForwardRequests>(Arena*);
template<> ::inference::foo::ForwardResponse* Arena::CreateMaybeMessage<::inference::foo::ForwardResponse>(Arena*);
template<> ::inference::foo::ForwardResponses* Arena::CreateMaybeMessage<::inference::foo::ForwardResponses>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace inference {
namespace foo {

// ===================================================================

class ForwardRequest_ForwardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inference.foo.ForwardRequest.ForwardData) */ {
 public:
  ForwardRequest_ForwardData();
  virtual ~ForwardRequest_ForwardData();

  ForwardRequest_ForwardData(const ForwardRequest_ForwardData& from);

  inline ForwardRequest_ForwardData& operator=(const ForwardRequest_ForwardData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForwardRequest_ForwardData(ForwardRequest_ForwardData&& from) noexcept
    : ForwardRequest_ForwardData() {
    *this = ::std::move(from);
  }

  inline ForwardRequest_ForwardData& operator=(ForwardRequest_ForwardData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardRequest_ForwardData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardRequest_ForwardData* internal_default_instance() {
    return reinterpret_cast<const ForwardRequest_ForwardData*>(
               &_ForwardRequest_ForwardData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ForwardRequest_ForwardData* other);
  friend void swap(ForwardRequest_ForwardData& a, ForwardRequest_ForwardData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForwardRequest_ForwardData* New() const final {
    return CreateMaybeMessage<ForwardRequest_ForwardData>(NULL);
  }

  ForwardRequest_ForwardData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ForwardRequest_ForwardData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ForwardRequest_ForwardData& from);
  void MergeFrom(const ForwardRequest_ForwardData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardRequest_ForwardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes body = 3;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const void* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // @@protoc_insertion_point(class_scope:inference.foo.ForwardRequest.ForwardData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_forward_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inference.foo.ForwardRequest) */ {
 public:
  ForwardRequest();
  virtual ~ForwardRequest();

  ForwardRequest(const ForwardRequest& from);

  inline ForwardRequest& operator=(const ForwardRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForwardRequest(ForwardRequest&& from) noexcept
    : ForwardRequest() {
    *this = ::std::move(from);
  }

  inline ForwardRequest& operator=(ForwardRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardRequest* internal_default_instance() {
    return reinterpret_cast<const ForwardRequest*>(
               &_ForwardRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ForwardRequest* other);
  friend void swap(ForwardRequest& a, ForwardRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForwardRequest* New() const final {
    return CreateMaybeMessage<ForwardRequest>(NULL);
  }

  ForwardRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ForwardRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ForwardRequest& from);
  void MergeFrom(const ForwardRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ForwardRequest_ForwardData ForwardData;

  // accessors -------------------------------------------------------

  // .inference.foo.ForwardRequest.ForwardData data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  private:
  const ::inference::foo::ForwardRequest_ForwardData& _internal_data() const;
  public:
  const ::inference::foo::ForwardRequest_ForwardData& data() const;
  ::inference::foo::ForwardRequest_ForwardData* release_data();
  ::inference::foo::ForwardRequest_ForwardData* mutable_data();
  void set_allocated_data(::inference::foo::ForwardRequest_ForwardData* data);

  // @@protoc_insertion_point(class_scope:inference.foo.ForwardRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::inference::foo::ForwardRequest_ForwardData* data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_forward_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardRequests : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inference.foo.ForwardRequests) */ {
 public:
  ForwardRequests();
  virtual ~ForwardRequests();

  ForwardRequests(const ForwardRequests& from);

  inline ForwardRequests& operator=(const ForwardRequests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForwardRequests(ForwardRequests&& from) noexcept
    : ForwardRequests() {
    *this = ::std::move(from);
  }

  inline ForwardRequests& operator=(ForwardRequests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardRequests& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardRequests* internal_default_instance() {
    return reinterpret_cast<const ForwardRequests*>(
               &_ForwardRequests_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ForwardRequests* other);
  friend void swap(ForwardRequests& a, ForwardRequests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForwardRequests* New() const final {
    return CreateMaybeMessage<ForwardRequests>(NULL);
  }

  ForwardRequests* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ForwardRequests>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ForwardRequests& from);
  void MergeFrom(const ForwardRequests& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardRequests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .inference.foo.ForwardRequest requests = 1;
  int requests_size() const;
  void clear_requests();
  static const int kRequestsFieldNumber = 1;
  ::inference::foo::ForwardRequest* mutable_requests(int index);
  ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardRequest >*
      mutable_requests();
  const ::inference::foo::ForwardRequest& requests(int index) const;
  ::inference::foo::ForwardRequest* add_requests();
  const ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardRequest >&
      requests() const;

  // @@protoc_insertion_point(class_scope:inference.foo.ForwardRequests)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardRequest > requests_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_forward_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inference.foo.ForwardResponse) */ {
 public:
  ForwardResponse();
  virtual ~ForwardResponse();

  ForwardResponse(const ForwardResponse& from);

  inline ForwardResponse& operator=(const ForwardResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForwardResponse(ForwardResponse&& from) noexcept
    : ForwardResponse() {
    *this = ::std::move(from);
  }

  inline ForwardResponse& operator=(ForwardResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardResponse* internal_default_instance() {
    return reinterpret_cast<const ForwardResponse*>(
               &_ForwardResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ForwardResponse* other);
  friend void swap(ForwardResponse& a, ForwardResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForwardResponse* New() const final {
    return CreateMaybeMessage<ForwardResponse>(NULL);
  }

  ForwardResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ForwardResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ForwardResponse& from);
  void MergeFrom(const ForwardResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string message = 2;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // int32 code = 1;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // int32 w = 5;
  void clear_w();
  static const int kWFieldNumber = 5;
  ::google::protobuf::int32 w() const;
  void set_w(::google::protobuf::int32 value);

  // int32 h = 6;
  void clear_h();
  static const int kHFieldNumber = 6;
  ::google::protobuf::int32 h() const;
  void set_h(::google::protobuf::int32 value);

  // float sum = 7;
  void clear_sum();
  static const int kSumFieldNumber = 7;
  float sum() const;
  void set_sum(float value);

  // @@protoc_insertion_point(class_scope:inference.foo.ForwardResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 w_;
  ::google::protobuf::int32 h_;
  float sum_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_forward_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardResponses : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inference.foo.ForwardResponses) */ {
 public:
  ForwardResponses();
  virtual ~ForwardResponses();

  ForwardResponses(const ForwardResponses& from);

  inline ForwardResponses& operator=(const ForwardResponses& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForwardResponses(ForwardResponses&& from) noexcept
    : ForwardResponses() {
    *this = ::std::move(from);
  }

  inline ForwardResponses& operator=(ForwardResponses&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardResponses& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ForwardResponses* internal_default_instance() {
    return reinterpret_cast<const ForwardResponses*>(
               &_ForwardResponses_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ForwardResponses* other);
  friend void swap(ForwardResponses& a, ForwardResponses& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForwardResponses* New() const final {
    return CreateMaybeMessage<ForwardResponses>(NULL);
  }

  ForwardResponses* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ForwardResponses>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ForwardResponses& from);
  void MergeFrom(const ForwardResponses& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardResponses* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .inference.foo.ForwardResponse responses = 1;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 1;
  ::inference::foo::ForwardResponse* mutable_responses(int index);
  ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardResponse >*
      mutable_responses();
  const ::inference::foo::ForwardResponse& responses(int index) const;
  ::inference::foo::ForwardResponse* add_responses();
  const ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardResponse >&
      responses() const;

  // @@protoc_insertion_point(class_scope:inference.foo.ForwardResponses)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardResponse > responses_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_forward_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ForwardRequest_ForwardData

// bytes body = 3;
inline void ForwardRequest_ForwardData::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardRequest_ForwardData::body() const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardRequest.ForwardData.body)
  return body_.GetNoArena();
}
inline void ForwardRequest_ForwardData::set_body(const ::std::string& value) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inference.foo.ForwardRequest.ForwardData.body)
}
#if LANG_CXX11
inline void ForwardRequest_ForwardData::set_body(::std::string&& value) {
  
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inference.foo.ForwardRequest.ForwardData.body)
}
#endif
inline void ForwardRequest_ForwardData::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inference.foo.ForwardRequest.ForwardData.body)
}
inline void ForwardRequest_ForwardData::set_body(const void* value, size_t size) {
  
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inference.foo.ForwardRequest.ForwardData.body)
}
inline ::std::string* ForwardRequest_ForwardData::mutable_body() {
  
  // @@protoc_insertion_point(field_mutable:inference.foo.ForwardRequest.ForwardData.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardRequest_ForwardData::release_body() {
  // @@protoc_insertion_point(field_release:inference.foo.ForwardRequest.ForwardData.body)
  
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardRequest_ForwardData::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    
  } else {
    
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:inference.foo.ForwardRequest.ForwardData.body)
}

// -------------------------------------------------------------------

// ForwardRequest

// .inference.foo.ForwardRequest.ForwardData data = 1;
inline bool ForwardRequest::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void ForwardRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
inline const ::inference::foo::ForwardRequest_ForwardData& ForwardRequest::_internal_data() const {
  return *data_;
}
inline const ::inference::foo::ForwardRequest_ForwardData& ForwardRequest::data() const {
  const ::inference::foo::ForwardRequest_ForwardData* p = data_;
  // @@protoc_insertion_point(field_get:inference.foo.ForwardRequest.data)
  return p != NULL ? *p : *reinterpret_cast<const ::inference::foo::ForwardRequest_ForwardData*>(
      &::inference::foo::_ForwardRequest_ForwardData_default_instance_);
}
inline ::inference::foo::ForwardRequest_ForwardData* ForwardRequest::release_data() {
  // @@protoc_insertion_point(field_release:inference.foo.ForwardRequest.data)
  
  ::inference::foo::ForwardRequest_ForwardData* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::inference::foo::ForwardRequest_ForwardData* ForwardRequest::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::inference::foo::ForwardRequest_ForwardData>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:inference.foo.ForwardRequest.data)
  return data_;
}
inline void ForwardRequest::set_allocated_data(::inference::foo::ForwardRequest_ForwardData* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:inference.foo.ForwardRequest.data)
}

// -------------------------------------------------------------------

// ForwardRequests

// repeated .inference.foo.ForwardRequest requests = 1;
inline int ForwardRequests::requests_size() const {
  return requests_.size();
}
inline void ForwardRequests::clear_requests() {
  requests_.Clear();
}
inline ::inference::foo::ForwardRequest* ForwardRequests::mutable_requests(int index) {
  // @@protoc_insertion_point(field_mutable:inference.foo.ForwardRequests.requests)
  return requests_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardRequest >*
ForwardRequests::mutable_requests() {
  // @@protoc_insertion_point(field_mutable_list:inference.foo.ForwardRequests.requests)
  return &requests_;
}
inline const ::inference::foo::ForwardRequest& ForwardRequests::requests(int index) const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardRequests.requests)
  return requests_.Get(index);
}
inline ::inference::foo::ForwardRequest* ForwardRequests::add_requests() {
  // @@protoc_insertion_point(field_add:inference.foo.ForwardRequests.requests)
  return requests_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardRequest >&
ForwardRequests::requests() const {
  // @@protoc_insertion_point(field_list:inference.foo.ForwardRequests.requests)
  return requests_;
}

// -------------------------------------------------------------------

// ForwardResponse

// int32 code = 1;
inline void ForwardResponse::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ForwardResponse::code() const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardResponse.code)
  return code_;
}
inline void ForwardResponse::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:inference.foo.ForwardResponse.code)
}

// string message = 2;
inline void ForwardResponse::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardResponse::message() const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardResponse.message)
  return message_.GetNoArena();
}
inline void ForwardResponse::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inference.foo.ForwardResponse.message)
}
#if LANG_CXX11
inline void ForwardResponse::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inference.foo.ForwardResponse.message)
}
#endif
inline void ForwardResponse::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inference.foo.ForwardResponse.message)
}
inline void ForwardResponse::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inference.foo.ForwardResponse.message)
}
inline ::std::string* ForwardResponse::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:inference.foo.ForwardResponse.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardResponse::release_message() {
  // @@protoc_insertion_point(field_release:inference.foo.ForwardResponse.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardResponse::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:inference.foo.ForwardResponse.message)
}

// int32 w = 5;
inline void ForwardResponse::clear_w() {
  w_ = 0;
}
inline ::google::protobuf::int32 ForwardResponse::w() const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardResponse.w)
  return w_;
}
inline void ForwardResponse::set_w(::google::protobuf::int32 value) {
  
  w_ = value;
  // @@protoc_insertion_point(field_set:inference.foo.ForwardResponse.w)
}

// int32 h = 6;
inline void ForwardResponse::clear_h() {
  h_ = 0;
}
inline ::google::protobuf::int32 ForwardResponse::h() const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardResponse.h)
  return h_;
}
inline void ForwardResponse::set_h(::google::protobuf::int32 value) {
  
  h_ = value;
  // @@protoc_insertion_point(field_set:inference.foo.ForwardResponse.h)
}

// float sum = 7;
inline void ForwardResponse::clear_sum() {
  sum_ = 0;
}
inline float ForwardResponse::sum() const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardResponse.sum)
  return sum_;
}
inline void ForwardResponse::set_sum(float value) {
  
  sum_ = value;
  // @@protoc_insertion_point(field_set:inference.foo.ForwardResponse.sum)
}

// -------------------------------------------------------------------

// ForwardResponses

// repeated .inference.foo.ForwardResponse responses = 1;
inline int ForwardResponses::responses_size() const {
  return responses_.size();
}
inline void ForwardResponses::clear_responses() {
  responses_.Clear();
}
inline ::inference::foo::ForwardResponse* ForwardResponses::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:inference.foo.ForwardResponses.responses)
  return responses_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardResponse >*
ForwardResponses::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:inference.foo.ForwardResponses.responses)
  return &responses_;
}
inline const ::inference::foo::ForwardResponse& ForwardResponses::responses(int index) const {
  // @@protoc_insertion_point(field_get:inference.foo.ForwardResponses.responses)
  return responses_.Get(index);
}
inline ::inference::foo::ForwardResponse* ForwardResponses::add_responses() {
  // @@protoc_insertion_point(field_add:inference.foo.ForwardResponses.responses)
  return responses_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::inference::foo::ForwardResponse >&
ForwardResponses::responses() const {
  // @@protoc_insertion_point(field_list:inference.foo.ForwardResponses.responses)
  return responses_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace foo
}  // namespace inference

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_forward_2eproto
