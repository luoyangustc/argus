// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: forward.proto

#include "forward.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_forward_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ForwardRequest_ForwardData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ForwardResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_forward_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ForwardRequest;
}  // namespace protobuf_forward_2eproto
namespace inference {
namespace foo {
class ForwardRequest_ForwardDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardRequest_ForwardData>
      _instance;
} _ForwardRequest_ForwardData_default_instance_;
class ForwardRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardRequest>
      _instance;
} _ForwardRequest_default_instance_;
class ForwardRequestsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardRequests>
      _instance;
} _ForwardRequests_default_instance_;
class ForwardResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardResponse>
      _instance;
} _ForwardResponse_default_instance_;
class ForwardResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ForwardResponses>
      _instance;
} _ForwardResponses_default_instance_;
}  // namespace foo
}  // namespace inference
namespace protobuf_forward_2eproto {
static void InitDefaultsForwardRequest_ForwardData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::foo::_ForwardRequest_ForwardData_default_instance_;
    new (ptr) ::inference::foo::ForwardRequest_ForwardData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::foo::ForwardRequest_ForwardData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ForwardRequest_ForwardData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsForwardRequest_ForwardData}, {}};

static void InitDefaultsForwardRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::foo::_ForwardRequest_default_instance_;
    new (ptr) ::inference::foo::ForwardRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::foo::ForwardRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForwardRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForwardRequest}, {
      &protobuf_forward_2eproto::scc_info_ForwardRequest_ForwardData.base,}};

static void InitDefaultsForwardRequests() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::foo::_ForwardRequests_default_instance_;
    new (ptr) ::inference::foo::ForwardRequests();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::foo::ForwardRequests::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForwardRequests =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForwardRequests}, {
      &protobuf_forward_2eproto::scc_info_ForwardRequest.base,}};

static void InitDefaultsForwardResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::foo::_ForwardResponse_default_instance_;
    new (ptr) ::inference::foo::ForwardResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::foo::ForwardResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ForwardResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsForwardResponse}, {}};

static void InitDefaultsForwardResponses() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::foo::_ForwardResponses_default_instance_;
    new (ptr) ::inference::foo::ForwardResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::foo::ForwardResponses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ForwardResponses =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsForwardResponses}, {
      &protobuf_forward_2eproto::scc_info_ForwardResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardRequest_ForwardData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardRequests.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ForwardResponses.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardRequest_ForwardData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardRequest_ForwardData, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardRequests, requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponse, w_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponse, h_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponse, sum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::foo::ForwardResponses, responses_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::inference::foo::ForwardRequest_ForwardData)},
  { 6, -1, sizeof(::inference::foo::ForwardRequest)},
  { 12, -1, sizeof(::inference::foo::ForwardRequests)},
  { 18, -1, sizeof(::inference::foo::ForwardResponse)},
  { 28, -1, sizeof(::inference::foo::ForwardResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::foo::_ForwardRequest_ForwardData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::foo::_ForwardRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::foo::_ForwardRequests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::foo::_ForwardResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::foo::_ForwardResponses_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "forward.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rforward.proto\022\rinference.foo\"f\n\016Forwar"
      "dRequest\0227\n\004data\030\001 \001(\0132).inference.foo.F"
      "orwardRequest.ForwardData\032\033\n\013ForwardData"
      "\022\014\n\004body\030\003 \001(\014\"B\n\017ForwardRequests\022/\n\010req"
      "uests\030\001 \003(\0132\035.inference.foo.ForwardReque"
      "st\"S\n\017ForwardResponse\022\014\n\004code\030\001 \001(\005\022\017\n\007m"
      "essage\030\002 \001(\t\022\t\n\001w\030\005 \001(\005\022\t\n\001h\030\006 \001(\005\022\013\n\003su"
      "m\030\007 \001(\002\"E\n\020ForwardResponses\0221\n\tresponses"
      "\030\001 \003(\0132\036.inference.foo.ForwardResponseb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 366);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "forward.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_forward_2eproto
namespace inference {
namespace foo {

// ===================================================================

void ForwardRequest_ForwardData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardRequest_ForwardData::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardRequest_ForwardData::ForwardRequest_ForwardData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardRequest_ForwardData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.foo.ForwardRequest.ForwardData)
}
ForwardRequest_ForwardData::ForwardRequest_ForwardData(const ForwardRequest_ForwardData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.foo.ForwardRequest.ForwardData)
}

void ForwardRequest_ForwardData::SharedCtor() {
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ForwardRequest_ForwardData::~ForwardRequest_ForwardData() {
  // @@protoc_insertion_point(destructor:inference.foo.ForwardRequest.ForwardData)
  SharedDtor();
}

void ForwardRequest_ForwardData::SharedDtor() {
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ForwardRequest_ForwardData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardRequest_ForwardData::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardRequest_ForwardData& ForwardRequest_ForwardData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardRequest_ForwardData.base);
  return *internal_default_instance();
}


void ForwardRequest_ForwardData::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.foo.ForwardRequest.ForwardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ForwardRequest_ForwardData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.foo.ForwardRequest.ForwardData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.foo.ForwardRequest.ForwardData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.foo.ForwardRequest.ForwardData)
  return false;
#undef DO_
}

void ForwardRequest_ForwardData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.foo.ForwardRequest.ForwardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes body = 3;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.foo.ForwardRequest.ForwardData)
}

::google::protobuf::uint8* ForwardRequest_ForwardData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.foo.ForwardRequest.ForwardData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes body = 3;
  if (this->body().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.foo.ForwardRequest.ForwardData)
  return target;
}

size_t ForwardRequest_ForwardData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.foo.ForwardRequest.ForwardData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes body = 3;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->body());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardRequest_ForwardData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.foo.ForwardRequest.ForwardData)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardRequest_ForwardData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardRequest_ForwardData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.foo.ForwardRequest.ForwardData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.foo.ForwardRequest.ForwardData)
    MergeFrom(*source);
  }
}

void ForwardRequest_ForwardData::MergeFrom(const ForwardRequest_ForwardData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.foo.ForwardRequest.ForwardData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
}

void ForwardRequest_ForwardData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.foo.ForwardRequest.ForwardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardRequest_ForwardData::CopyFrom(const ForwardRequest_ForwardData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.foo.ForwardRequest.ForwardData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardRequest_ForwardData::IsInitialized() const {
  return true;
}

void ForwardRequest_ForwardData::Swap(ForwardRequest_ForwardData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardRequest_ForwardData::InternalSwap(ForwardRequest_ForwardData* other) {
  using std::swap;
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardRequest_ForwardData::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardRequest::InitAsDefaultInstance() {
  ::inference::foo::_ForwardRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::inference::foo::ForwardRequest_ForwardData*>(
      ::inference::foo::ForwardRequest_ForwardData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardRequest::ForwardRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.foo.ForwardRequest)
}
ForwardRequest::ForwardRequest(const ForwardRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::inference::foo::ForwardRequest_ForwardData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:inference.foo.ForwardRequest)
}

void ForwardRequest::SharedCtor() {
  data_ = NULL;
}

ForwardRequest::~ForwardRequest() {
  // @@protoc_insertion_point(destructor:inference.foo.ForwardRequest)
  SharedDtor();
}

void ForwardRequest::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void ForwardRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardRequest::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardRequest& ForwardRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardRequest.base);
  return *internal_default_instance();
}


void ForwardRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.foo.ForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool ForwardRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.foo.ForwardRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .inference.foo.ForwardRequest.ForwardData data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.foo.ForwardRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.foo.ForwardRequest)
  return false;
#undef DO_
}

void ForwardRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.foo.ForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .inference.foo.ForwardRequest.ForwardData data = 1;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.foo.ForwardRequest)
}

::google::protobuf::uint8* ForwardRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.foo.ForwardRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .inference.foo.ForwardRequest.ForwardData data = 1;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.foo.ForwardRequest)
  return target;
}

size_t ForwardRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.foo.ForwardRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .inference.foo.ForwardRequest.ForwardData data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.foo.ForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.foo.ForwardRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.foo.ForwardRequest)
    MergeFrom(*source);
  }
}

void ForwardRequest::MergeFrom(const ForwardRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.foo.ForwardRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::inference::foo::ForwardRequest_ForwardData::MergeFrom(from.data());
  }
}

void ForwardRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.foo.ForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardRequest::CopyFrom(const ForwardRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.foo.ForwardRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardRequest::IsInitialized() const {
  return true;
}

void ForwardRequest::Swap(ForwardRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardRequest::InternalSwap(ForwardRequest* other) {
  using std::swap;
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardRequest::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardRequests::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardRequests::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardRequests::ForwardRequests()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardRequests.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.foo.ForwardRequests)
}
ForwardRequests::ForwardRequests(const ForwardRequests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.foo.ForwardRequests)
}

void ForwardRequests::SharedCtor() {
}

ForwardRequests::~ForwardRequests() {
  // @@protoc_insertion_point(destructor:inference.foo.ForwardRequests)
  SharedDtor();
}

void ForwardRequests::SharedDtor() {
}

void ForwardRequests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardRequests::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardRequests& ForwardRequests::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardRequests.base);
  return *internal_default_instance();
}


void ForwardRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.foo.ForwardRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear();
}

bool ForwardRequests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.foo.ForwardRequests)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .inference.foo.ForwardRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.foo.ForwardRequests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.foo.ForwardRequests)
  return false;
#undef DO_
}

void ForwardRequests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.foo.ForwardRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.foo.ForwardRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.foo.ForwardRequests)
}

::google::protobuf::uint8* ForwardRequests::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.foo.ForwardRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.foo.ForwardRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.foo.ForwardRequests)
  return target;
}

size_t ForwardRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.foo.ForwardRequests)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .inference.foo.ForwardRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardRequests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.foo.ForwardRequests)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardRequests* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardRequests>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.foo.ForwardRequests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.foo.ForwardRequests)
    MergeFrom(*source);
  }
}

void ForwardRequests::MergeFrom(const ForwardRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.foo.ForwardRequests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void ForwardRequests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.foo.ForwardRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardRequests::CopyFrom(const ForwardRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.foo.ForwardRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardRequests::IsInitialized() const {
  return true;
}

void ForwardRequests::Swap(ForwardRequests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardRequests::InternalSwap(ForwardRequests* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardRequests::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardResponse::kCodeFieldNumber;
const int ForwardResponse::kMessageFieldNumber;
const int ForwardResponse::kWFieldNumber;
const int ForwardResponse::kHFieldNumber;
const int ForwardResponse::kSumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardResponse::ForwardResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.foo.ForwardResponse)
}
ForwardResponse::ForwardResponse(const ForwardResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&sum_) -
    reinterpret_cast<char*>(&code_)) + sizeof(sum_));
  // @@protoc_insertion_point(copy_constructor:inference.foo.ForwardResponse)
}

void ForwardResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_) -
      reinterpret_cast<char*>(&code_)) + sizeof(sum_));
}

ForwardResponse::~ForwardResponse() {
  // @@protoc_insertion_point(destructor:inference.foo.ForwardResponse)
  SharedDtor();
}

void ForwardResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ForwardResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardResponse::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardResponse& ForwardResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardResponse.base);
  return *internal_default_instance();
}


void ForwardResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.foo.ForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sum_) -
      reinterpret_cast<char*>(&code_)) + sizeof(sum_));
  _internal_metadata_.Clear();
}

bool ForwardResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.foo.ForwardResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inference.foo.ForwardResponse.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 w = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &w_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 h = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &h_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float sum = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &sum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.foo.ForwardResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.foo.ForwardResponse)
  return false;
#undef DO_
}

void ForwardResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.foo.ForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inference.foo.ForwardResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // int32 w = 5;
  if (this->w() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->w(), output);
  }

  // int32 h = 6;
  if (this->h() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->h(), output);
  }

  // float sum = 7;
  if (this->sum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->sum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.foo.ForwardResponse)
}

::google::protobuf::uint8* ForwardResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.foo.ForwardResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inference.foo.ForwardResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // int32 w = 5;
  if (this->w() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->w(), target);
  }

  // int32 h = 6;
  if (this->h() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->h(), target);
  }

  // float sum = 7;
  if (this->sum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->sum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.foo.ForwardResponse)
  return target;
}

size_t ForwardResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.foo.ForwardResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  // int32 w = 5;
  if (this->w() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->w());
  }

  // int32 h = 6;
  if (this->h() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->h());
  }

  // float sum = 7;
  if (this->sum() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.foo.ForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.foo.ForwardResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.foo.ForwardResponse)
    MergeFrom(*source);
  }
}

void ForwardResponse::MergeFrom(const ForwardResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.foo.ForwardResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.w() != 0) {
    set_w(from.w());
  }
  if (from.h() != 0) {
    set_h(from.h());
  }
  if (from.sum() != 0) {
    set_sum(from.sum());
  }
}

void ForwardResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.foo.ForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardResponse::CopyFrom(const ForwardResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.foo.ForwardResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardResponse::IsInitialized() const {
  return true;
}

void ForwardResponse::Swap(ForwardResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardResponse::InternalSwap(ForwardResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(w_, other->w_);
  swap(h_, other->h_);
  swap(sum_, other->sum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardResponse::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ForwardResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ForwardResponses::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ForwardResponses::ForwardResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_forward_2eproto::scc_info_ForwardResponses.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.foo.ForwardResponses)
}
ForwardResponses::ForwardResponses(const ForwardResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.foo.ForwardResponses)
}

void ForwardResponses::SharedCtor() {
}

ForwardResponses::~ForwardResponses() {
  // @@protoc_insertion_point(destructor:inference.foo.ForwardResponses)
  SharedDtor();
}

void ForwardResponses::SharedDtor() {
}

void ForwardResponses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ForwardResponses::descriptor() {
  ::protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ForwardResponses& ForwardResponses::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_forward_2eproto::scc_info_ForwardResponses.base);
  return *internal_default_instance();
}


void ForwardResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.foo.ForwardResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool ForwardResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.foo.ForwardResponses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .inference.foo.ForwardResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.foo.ForwardResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.foo.ForwardResponses)
  return false;
#undef DO_
}

void ForwardResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.foo.ForwardResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.foo.ForwardResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.foo.ForwardResponses)
}

::google::protobuf::uint8* ForwardResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.foo.ForwardResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.foo.ForwardResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.foo.ForwardResponses)
  return target;
}

size_t ForwardResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.foo.ForwardResponses)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .inference.foo.ForwardResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ForwardResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.foo.ForwardResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const ForwardResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ForwardResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.foo.ForwardResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.foo.ForwardResponses)
    MergeFrom(*source);
  }
}

void ForwardResponses::MergeFrom(const ForwardResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.foo.ForwardResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void ForwardResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.foo.ForwardResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ForwardResponses::CopyFrom(const ForwardResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.foo.ForwardResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ForwardResponses::IsInitialized() const {
  return true;
}

void ForwardResponses::Swap(ForwardResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ForwardResponses::InternalSwap(ForwardResponses* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ForwardResponses::GetMetadata() const {
  protobuf_forward_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_forward_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace foo
}  // namespace inference
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::foo::ForwardRequest_ForwardData* Arena::CreateMaybeMessage< ::inference::foo::ForwardRequest_ForwardData >(Arena* arena) {
  return Arena::CreateInternal< ::inference::foo::ForwardRequest_ForwardData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::foo::ForwardRequest* Arena::CreateMaybeMessage< ::inference::foo::ForwardRequest >(Arena* arena) {
  return Arena::CreateInternal< ::inference::foo::ForwardRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::foo::ForwardRequests* Arena::CreateMaybeMessage< ::inference::foo::ForwardRequests >(Arena* arena) {
  return Arena::CreateInternal< ::inference::foo::ForwardRequests >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::foo::ForwardResponse* Arena::CreateMaybeMessage< ::inference::foo::ForwardResponse >(Arena* arena) {
  return Arena::CreateInternal< ::inference::foo::ForwardResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::foo::ForwardResponses* Arena::CreateMaybeMessage< ::inference::foo::ForwardResponses >(Arena* arena) {
  return Arena::CreateInternal< ::inference::foo::ForwardResponses >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
