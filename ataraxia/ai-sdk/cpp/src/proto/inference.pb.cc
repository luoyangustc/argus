// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: inference.proto

#include "inference.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_inference_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_inference_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateParams_Env;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_inference_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateParams_File;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_inference_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InferenceRequest_RequestData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_inference_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InferenceResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_inference_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InferenceRequest;
}  // namespace protobuf_inference_2eproto
namespace inference {
class InitParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitParams>
      _instance;
} _InitParams_default_instance_;
class CreateParams_EnvDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateParams_Env>
      _instance;
} _CreateParams_Env_default_instance_;
class CreateParams_FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateParams_File>
      _instance;
} _CreateParams_File_default_instance_;
class CreateParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateParams>
      _instance;
} _CreateParams_default_instance_;
class InferenceRequest_RequestDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceRequest_RequestData>
      _instance;
} _InferenceRequest_RequestData_default_instance_;
class InferenceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceRequest>
      _instance;
} _InferenceRequest_default_instance_;
class InferenceRequestsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceRequests>
      _instance;
} _InferenceRequests_default_instance_;
class InferenceResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceResponse>
      _instance;
} _InferenceResponse_default_instance_;
class InferenceResponsesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InferenceResponses>
      _instance;
} _InferenceResponses_default_instance_;
}  // namespace inference
namespace protobuf_inference_2eproto {
static void InitDefaultsInitParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_InitParams_default_instance_;
    new (ptr) ::inference::InitParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::InitParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InitParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInitParams}, {}};

static void InitDefaultsCreateParams_Env() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_CreateParams_Env_default_instance_;
    new (ptr) ::inference::CreateParams_Env();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::CreateParams_Env::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateParams_Env =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateParams_Env}, {}};

static void InitDefaultsCreateParams_File() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_CreateParams_File_default_instance_;
    new (ptr) ::inference::CreateParams_File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::CreateParams_File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateParams_File =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateParams_File}, {}};

static void InitDefaultsCreateParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.DefaultConstruct();
  *::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get_mutable() = ::std::string("GPU", 3);
  ::google::protobuf::internal::OnShutdownDestroyString(
      ::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get_mutable());
  {
    void* ptr = &::inference::_CreateParams_default_instance_;
    new (ptr) ::inference::CreateParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::CreateParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CreateParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCreateParams}, {
      &protobuf_inference_2eproto::scc_info_CreateParams_Env.base,
      &protobuf_inference_2eproto::scc_info_CreateParams_File.base,}};

static void InitDefaultsInferenceRequest_RequestData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_InferenceRequest_RequestData_default_instance_;
    new (ptr) ::inference::InferenceRequest_RequestData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::InferenceRequest_RequestData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InferenceRequest_RequestData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInferenceRequest_RequestData}, {}};

static void InitDefaultsInferenceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_InferenceRequest_default_instance_;
    new (ptr) ::inference::InferenceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::InferenceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InferenceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInferenceRequest}, {
      &protobuf_inference_2eproto::scc_info_InferenceRequest_RequestData.base,}};

static void InitDefaultsInferenceRequests() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_InferenceRequests_default_instance_;
    new (ptr) ::inference::InferenceRequests();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::InferenceRequests::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InferenceRequests =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInferenceRequests}, {
      &protobuf_inference_2eproto::scc_info_InferenceRequest.base,}};

static void InitDefaultsInferenceResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_InferenceResponse_default_instance_;
    new (ptr) ::inference::InferenceResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::InferenceResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InferenceResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInferenceResponse}, {}};

static void InitDefaultsInferenceResponses() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::inference::_InferenceResponses_default_instance_;
    new (ptr) ::inference::InferenceResponses();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::inference::InferenceResponses::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InferenceResponses =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInferenceResponses}, {
      &protobuf_inference_2eproto::scc_info_InferenceResponse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_InitParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateParams_Env.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateParams_File.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceRequest_RequestData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceRequests.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InferenceResponses.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InitParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InitParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InitParams, app_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_Env, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_Env, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_Env, app_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_Env, workspace_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_File, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_File, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams_File, body_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, use_device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, batch_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, env_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, model_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, model_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, custom_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::CreateParams, custom_params_),
  0,
  4,
  3,
  ~0u,
  1,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest_RequestData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest_RequestData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest_RequestData, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest_RequestData, attribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest_RequestData, body_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest, datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequest, params_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequests, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceRequests, requests_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponse, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponse, body_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponses, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponses, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::inference::InferenceResponses, responses_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 6, sizeof(::inference::InitParams)},
  { 7, 14, sizeof(::inference::CreateParams_Env)},
  { 16, 23, sizeof(::inference::CreateParams_File)},
  { 25, 37, sizeof(::inference::CreateParams)},
  { 44, 52, sizeof(::inference::InferenceRequest_RequestData)},
  { 55, 63, sizeof(::inference::InferenceRequest)},
  { 66, 72, sizeof(::inference::InferenceRequests)},
  { 73, 82, sizeof(::inference::InferenceResponse)},
  { 86, 92, sizeof(::inference::InferenceResponses)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_InitParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_CreateParams_Env_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_CreateParams_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_CreateParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_InferenceRequest_RequestData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_InferenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_InferenceRequests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_InferenceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::inference::_InferenceResponses_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "inference.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017inference.proto\022\tinference\"\031\n\nInitPara"
      "ms\022\013\n\003app\030\001 \001(\t\"\307\002\n\014CreateParams\022\027\n\nuse_"
      "device\030\001 \001(\t:\003GPU\022\025\n\nbatch_size\030\002 \001(\005:\0011"
      "\022(\n\003env\030\004 \001(\0132\033.inference.CreateParams.E"
      "nv\0221\n\013model_files\030\t \003(\0132\034.inference.Crea"
      "teParams.File\022\024\n\014model_params\030\n \001(\t\0222\n\014c"
      "ustom_files\030\013 \003(\0132\034.inference.CreatePara"
      "ms.File\022\025\n\rcustom_params\030\014 \001(\t\032%\n\003Env\022\013\n"
      "\003app\030\001 \001(\t\022\021\n\tworkspace\030\002 \001(\t\032\"\n\004File\022\014\n"
      "\004name\030\001 \001(\t\022\014\n\004body\030\002 \001(\014\"\316\001\n\020InferenceR"
      "equest\0225\n\004data\030\001 \001(\0132\'.inference.Inferen"
      "ceRequest.RequestData\0226\n\005datas\030\002 \003(\0132\'.i"
      "nference.InferenceRequest.RequestData\022\016\n"
      "\006params\030\003 \001(\t\032;\n\013RequestData\022\013\n\003uri\030\001 \001("
      "\t\022\021\n\tattribute\030\002 \001(\t\022\014\n\004body\030\003 \001(\014\"B\n\021In"
      "ferenceRequests\022-\n\010requests\030\001 \003(\0132\033.infe"
      "rence.InferenceRequest\"P\n\021InferenceRespo"
      "nse\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\022\016\n\006re"
      "sult\030\005 \001(\t\022\014\n\004body\030\006 \001(\014\"E\n\022InferenceRes"
      "ponses\022/\n\tresponses\030\001 \003(\0132\034.inference.In"
      "ferenceResponse"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 815);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "inference.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_inference_2eproto
namespace inference {

// ===================================================================

void InitParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitParams::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitParams::InitParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_InitParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.InitParams)
}
InitParams::InitParams(const InitParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app()) {
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.InitParams)
}

void InitParams::SharedCtor() {
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InitParams::~InitParams() {
  // @@protoc_insertion_point(destructor:inference.InitParams)
  SharedDtor();
}

void InitParams::SharedDtor() {
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InitParams::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InitParams& InitParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_InitParams.base);
  return *internal_default_instance();
}


void InitParams::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InitParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    app_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InitParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.InitParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app().data(), static_cast<int>(this->app().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.InitParams.app");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.InitParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.InitParams)
  return false;
#undef DO_
}

void InitParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.InitParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InitParams.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.InitParams)
}

::google::protobuf::uint8* InitParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.InitParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InitParams.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InitParams)
  return target;
}

size_t InitParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InitParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string app = 1;
  if (has_app()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.InitParams)
  GOOGLE_DCHECK_NE(&from, this);
  const InitParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.InitParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.InitParams)
    MergeFrom(*source);
  }
}

void InitParams::MergeFrom(const InitParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.InitParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_app()) {
    set_has_app();
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
}

void InitParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.InitParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitParams::CopyFrom(const InitParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InitParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitParams::IsInitialized() const {
  return true;
}

void InitParams::Swap(InitParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitParams::InternalSwap(InitParams* other) {
  using std::swap;
  app_.Swap(&other->app_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InitParams::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateParams_Env::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateParams_Env::kAppFieldNumber;
const int CreateParams_Env::kWorkspaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateParams_Env::CreateParams_Env()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_CreateParams_Env.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.CreateParams.Env)
}
CreateParams_Env::CreateParams_Env(const CreateParams_Env& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_app()) {
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  workspace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_workspace()) {
    workspace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workspace_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.CreateParams.Env)
}

void CreateParams_Env::SharedCtor() {
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workspace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateParams_Env::~CreateParams_Env() {
  // @@protoc_insertion_point(destructor:inference.CreateParams.Env)
  SharedDtor();
}

void CreateParams_Env::SharedDtor() {
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  workspace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateParams_Env::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateParams_Env::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateParams_Env& CreateParams_Env::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_CreateParams_Env.base);
  return *internal_default_instance();
}


void CreateParams_Env::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CreateParams.Env)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      workspace_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateParams_Env::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.CreateParams.Env)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->app().data(), static_cast<int>(this->app().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.CreateParams.Env.app");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string workspace = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workspace()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->workspace().data(), static_cast<int>(this->workspace().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.CreateParams.Env.workspace");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.CreateParams.Env)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.CreateParams.Env)
  return false;
#undef DO_
}

void CreateParams_Env::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.CreateParams.Env)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.Env.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app(), output);
  }

  // optional string workspace = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->workspace().data(), static_cast<int>(this->workspace().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.Env.workspace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->workspace(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.CreateParams.Env)
}

::google::protobuf::uint8* CreateParams_Env::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.CreateParams.Env)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string app = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.Env.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app(), target);
  }

  // optional string workspace = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->workspace().data(), static_cast<int>(this->workspace().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.Env.workspace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->workspace(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CreateParams.Env)
  return target;
}

size_t CreateParams_Env::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CreateParams.Env)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string app = 1;
    if (has_app()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->app());
    }

    // optional string workspace = 2;
    if (has_workspace()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->workspace());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateParams_Env::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.CreateParams.Env)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateParams_Env* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateParams_Env>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.CreateParams.Env)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.CreateParams.Env)
    MergeFrom(*source);
  }
}

void CreateParams_Env::MergeFrom(const CreateParams_Env& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.CreateParams.Env)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_app();
      app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_workspace();
      workspace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workspace_);
    }
  }
}

void CreateParams_Env::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.CreateParams.Env)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateParams_Env::CopyFrom(const CreateParams_Env& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CreateParams.Env)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateParams_Env::IsInitialized() const {
  return true;
}

void CreateParams_Env::Swap(CreateParams_Env* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateParams_Env::InternalSwap(CreateParams_Env* other) {
  using std::swap;
  app_.Swap(&other->app_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  workspace_.Swap(&other->workspace_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateParams_Env::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateParams_File::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateParams_File::kNameFieldNumber;
const int CreateParams_File::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateParams_File::CreateParams_File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_CreateParams_File.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.CreateParams.File)
}
CreateParams_File::CreateParams_File(const CreateParams_File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.CreateParams.File)
}

void CreateParams_File::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateParams_File::~CreateParams_File() {
  // @@protoc_insertion_point(destructor:inference.CreateParams.File)
  SharedDtor();
}

void CreateParams_File::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateParams_File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateParams_File::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateParams_File& CreateParams_File::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_CreateParams_File.base);
  return *internal_default_instance();
}


void CreateParams_File::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CreateParams.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      body_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateParams_File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.CreateParams.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.CreateParams.File.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.CreateParams.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.CreateParams.File)
  return false;
#undef DO_
}

void CreateParams_File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.CreateParams.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.File.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes body = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.CreateParams.File)
}

::google::protobuf::uint8* CreateParams_File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.CreateParams.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.File.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes body = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CreateParams.File)
  return target;
}

size_t CreateParams_File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CreateParams.File)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes body = 2;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateParams_File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.CreateParams.File)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateParams_File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateParams_File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.CreateParams.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.CreateParams.File)
    MergeFrom(*source);
  }
}

void CreateParams_File::MergeFrom(const CreateParams_File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.CreateParams.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
}

void CreateParams_File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.CreateParams.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateParams_File::CopyFrom(const CreateParams_File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CreateParams.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateParams_File::IsInitialized() const {
  return true;
}

void CreateParams_File::Swap(CreateParams_File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateParams_File::InternalSwap(CreateParams_File* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateParams_File::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateParams::InitAsDefaultInstance() {
  ::inference::_CreateParams_default_instance_._instance.get_mutable()->env_ = const_cast< ::inference::CreateParams_Env*>(
      ::inference::CreateParams_Env::internal_default_instance());
}
::google::protobuf::internal::ExplicitlyConstructed<::std::string> CreateParams::_i_give_permission_to_break_this_code_default_use_device_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateParams::kUseDeviceFieldNumber;
const int CreateParams::kBatchSizeFieldNumber;
const int CreateParams::kEnvFieldNumber;
const int CreateParams::kModelFilesFieldNumber;
const int CreateParams::kModelParamsFieldNumber;
const int CreateParams::kCustomFilesFieldNumber;
const int CreateParams::kCustomParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateParams::CreateParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_CreateParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.CreateParams)
}
CreateParams::CreateParams(const CreateParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      model_files_(from.model_files_),
      custom_files_(from.custom_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  use_device_.UnsafeSetDefault(&::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get());
  if (from.has_use_device()) {
    use_device_.AssignWithDefault(&::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get(), from.use_device_);
  }
  model_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_model_params()) {
    model_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_params_);
  }
  custom_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_params()) {
    custom_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_params_);
  }
  if (from.has_env()) {
    env_ = new ::inference::CreateParams_Env(*from.env_);
  } else {
    env_ = NULL;
  }
  batch_size_ = from.batch_size_;
  // @@protoc_insertion_point(copy_constructor:inference.CreateParams)
}

void CreateParams::SharedCtor() {
  use_device_.UnsafeSetDefault(&::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get());
  model_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  env_ = NULL;
  batch_size_ = 1;
}

CreateParams::~CreateParams() {
  // @@protoc_insertion_point(destructor:inference.CreateParams)
  SharedDtor();
}

void CreateParams::SharedDtor() {
  use_device_.DestroyNoArena(&::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get());
  model_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete env_;
}

void CreateParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateParams::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateParams& CreateParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_CreateParams.base);
  return *internal_default_instance();
}


void CreateParams::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.CreateParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  model_files_.Clear();
  custom_files_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      use_device_.UnsafeMutablePointer()->assign(*&::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      model_params_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      custom_params_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(env_ != NULL);
      env_->Clear();
    }
    batch_size_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.CreateParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string use_device = 1 [default = "GPU"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_use_device()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->use_device().data(), static_cast<int>(this->use_device().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.CreateParams.use_device");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 batch_size = 2 [default = 1];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_batch_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .inference.CreateParams.Env env = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_env()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .inference.CreateParams.File model_files = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_model_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string model_params = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_params().data(), static_cast<int>(this->model_params().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.CreateParams.model_params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .inference.CreateParams.File custom_files = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_custom_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_params = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->custom_params().data(), static_cast<int>(this->custom_params().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.CreateParams.custom_params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.CreateParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.CreateParams)
  return false;
#undef DO_
}

void CreateParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.CreateParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string use_device = 1 [default = "GPU"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->use_device().data(), static_cast<int>(this->use_device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.use_device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->use_device(), output);
  }

  // optional int32 batch_size = 2 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->batch_size(), output);
  }

  // optional .inference.CreateParams.Env env = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_env(), output);
  }

  // repeated .inference.CreateParams.File model_files = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->model_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->model_files(static_cast<int>(i)),
      output);
  }

  // optional string model_params = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_params().data(), static_cast<int>(this->model_params().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.model_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->model_params(), output);
  }

  // repeated .inference.CreateParams.File custom_files = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->custom_files(static_cast<int>(i)),
      output);
  }

  // optional string custom_params = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_params().data(), static_cast<int>(this->custom_params().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.custom_params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->custom_params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.CreateParams)
}

::google::protobuf::uint8* CreateParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.CreateParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string use_device = 1 [default = "GPU"];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->use_device().data(), static_cast<int>(this->use_device().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.use_device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->use_device(), target);
  }

  // optional int32 batch_size = 2 [default = 1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->batch_size(), target);
  }

  // optional .inference.CreateParams.Env env = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_env(), deterministic, target);
  }

  // repeated .inference.CreateParams.File model_files = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->model_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->model_files(static_cast<int>(i)), deterministic, target);
  }

  // optional string model_params = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_params().data(), static_cast<int>(this->model_params().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.model_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->model_params(), target);
  }

  // repeated .inference.CreateParams.File custom_files = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->custom_files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->custom_files(static_cast<int>(i)), deterministic, target);
  }

  // optional string custom_params = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_params().data(), static_cast<int>(this->custom_params().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.CreateParams.custom_params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->custom_params(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.CreateParams)
  return target;
}

size_t CreateParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.CreateParams)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .inference.CreateParams.File model_files = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->model_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->model_files(static_cast<int>(i)));
    }
  }

  // repeated .inference.CreateParams.File custom_files = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->custom_files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->custom_files(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string use_device = 1 [default = "GPU"];
    if (has_use_device()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->use_device());
    }

    // optional string model_params = 10;
    if (has_model_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_params());
    }

    // optional string custom_params = 12;
    if (has_custom_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_params());
    }

    // optional .inference.CreateParams.Env env = 4;
    if (has_env()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *env_);
    }

    // optional int32 batch_size = 2 [default = 1];
    if (has_batch_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->batch_size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.CreateParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.CreateParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.CreateParams)
    MergeFrom(*source);
  }
}

void CreateParams::MergeFrom(const CreateParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.CreateParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  model_files_.MergeFrom(from.model_files_);
  custom_files_.MergeFrom(from.custom_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_use_device();
      use_device_.AssignWithDefault(&::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get(), from.use_device_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_model_params();
      model_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_params_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_custom_params();
      custom_params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_params_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_env()->::inference::CreateParams_Env::MergeFrom(from.env());
    }
    if (cached_has_bits & 0x00000010u) {
      batch_size_ = from.batch_size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreateParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.CreateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateParams::CopyFrom(const CreateParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.CreateParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateParams::IsInitialized() const {
  return true;
}

void CreateParams::Swap(CreateParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateParams::InternalSwap(CreateParams* other) {
  using std::swap;
  CastToBase(&model_files_)->InternalSwap(CastToBase(&other->model_files_));
  CastToBase(&custom_files_)->InternalSwap(CastToBase(&other->custom_files_));
  use_device_.Swap(&other->use_device_, &::inference::CreateParams::_i_give_permission_to_break_this_code_default_use_device_.get(),
    GetArenaNoVirtual());
  model_params_.Swap(&other->model_params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  custom_params_.Swap(&other->custom_params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(env_, other->env_);
  swap(batch_size_, other->batch_size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateParams::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceRequest_RequestData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceRequest_RequestData::kUriFieldNumber;
const int InferenceRequest_RequestData::kAttributeFieldNumber;
const int InferenceRequest_RequestData::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceRequest_RequestData::InferenceRequest_RequestData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_InferenceRequest_RequestData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.InferenceRequest.RequestData)
}
InferenceRequest_RequestData::InferenceRequest_RequestData(const InferenceRequest_RequestData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_uri()) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  attribute_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attribute()) {
    attribute_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attribute_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  // @@protoc_insertion_point(copy_constructor:inference.InferenceRequest.RequestData)
}

void InferenceRequest_RequestData::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attribute_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InferenceRequest_RequestData::~InferenceRequest_RequestData() {
  // @@protoc_insertion_point(destructor:inference.InferenceRequest.RequestData)
  SharedDtor();
}

void InferenceRequest_RequestData::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  attribute_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InferenceRequest_RequestData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceRequest_RequestData::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceRequest_RequestData& InferenceRequest_RequestData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_InferenceRequest_RequestData.base);
  return *internal_default_instance();
}


void InferenceRequest_RequestData::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferenceRequest.RequestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      uri_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      attribute_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      body_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceRequest_RequestData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.InferenceRequest.RequestData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.InferenceRequest.RequestData.uri");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string attribute = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attribute()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attribute().data(), static_cast<int>(this->attribute().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.InferenceRequest.RequestData.attribute");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.InferenceRequest.RequestData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.InferenceRequest.RequestData)
  return false;
#undef DO_
}

void InferenceRequest_RequestData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.InferenceRequest.RequestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string uri = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceRequest.RequestData.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // optional string attribute = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attribute().data(), static_cast<int>(this->attribute().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceRequest.RequestData.attribute");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->attribute(), output);
  }

  // optional bytes body = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.InferenceRequest.RequestData)
}

::google::protobuf::uint8* InferenceRequest_RequestData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferenceRequest.RequestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string uri = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceRequest.RequestData.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // optional string attribute = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attribute().data(), static_cast<int>(this->attribute().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceRequest.RequestData.attribute");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->attribute(), target);
  }

  // optional bytes body = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferenceRequest.RequestData)
  return target;
}

size_t InferenceRequest_RequestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferenceRequest.RequestData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string uri = 1;
    if (has_uri()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->uri());
    }

    // optional string attribute = 2;
    if (has_attribute()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attribute());
    }

    // optional bytes body = 3;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceRequest_RequestData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.InferenceRequest.RequestData)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceRequest_RequestData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceRequest_RequestData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.InferenceRequest.RequestData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.InferenceRequest.RequestData)
    MergeFrom(*source);
  }
}

void InferenceRequest_RequestData::MergeFrom(const InferenceRequest_RequestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.InferenceRequest.RequestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_uri();
      uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_attribute();
      attribute_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attribute_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
  }
}

void InferenceRequest_RequestData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.InferenceRequest.RequestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceRequest_RequestData::CopyFrom(const InferenceRequest_RequestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferenceRequest.RequestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceRequest_RequestData::IsInitialized() const {
  return true;
}

void InferenceRequest_RequestData::Swap(InferenceRequest_RequestData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferenceRequest_RequestData::InternalSwap(InferenceRequest_RequestData* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  attribute_.Swap(&other->attribute_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceRequest_RequestData::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceRequest::InitAsDefaultInstance() {
  ::inference::_InferenceRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::inference::InferenceRequest_RequestData*>(
      ::inference::InferenceRequest_RequestData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceRequest::kDataFieldNumber;
const int InferenceRequest::kDatasFieldNumber;
const int InferenceRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceRequest::InferenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_InferenceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.InferenceRequest)
}
InferenceRequest::InferenceRequest(const InferenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_params()) {
    params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
  }
  if (from.has_data()) {
    data_ = new ::inference::InferenceRequest_RequestData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:inference.InferenceRequest)
}

void InferenceRequest::SharedCtor() {
  params_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

InferenceRequest::~InferenceRequest() {
  // @@protoc_insertion_point(destructor:inference.InferenceRequest)
  SharedDtor();
}

void InferenceRequest::SharedDtor() {
  params_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void InferenceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceRequest::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceRequest& InferenceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_InferenceRequest.base);
  return *internal_default_instance();
}


void InferenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datas_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      params_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.InferenceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .inference.InferenceRequest.RequestData data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .inference.InferenceRequest.RequestData datas = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->params().data(), static_cast<int>(this->params().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.InferenceRequest.params");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.InferenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.InferenceRequest)
  return false;
#undef DO_
}

void InferenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.InferenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .inference.InferenceRequest.RequestData data = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_data(), output);
  }

  // repeated .inference.InferenceRequest.RequestData datas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->datas_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->datas(static_cast<int>(i)),
      output);
  }

  // optional string params = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceRequest.params");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->params(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.InferenceRequest)
}

::google::protobuf::uint8* InferenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .inference.InferenceRequest.RequestData data = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_data(), deterministic, target);
  }

  // repeated .inference.InferenceRequest.RequestData datas = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->datas_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->datas(static_cast<int>(i)), deterministic, target);
  }

  // optional string params = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->params().data(), static_cast<int>(this->params().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceRequest.params");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->params(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferenceRequest)
  return target;
}

size_t InferenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferenceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .inference.InferenceRequest.RequestData datas = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->datas_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->datas(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string params = 3;
    if (has_params()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->params());
    }

    // optional .inference.InferenceRequest.RequestData data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.InferenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.InferenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.InferenceRequest)
    MergeFrom(*source);
  }
}

void InferenceRequest::MergeFrom(const InferenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.InferenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  datas_.MergeFrom(from.datas_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_params();
      params_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.params_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_data()->::inference::InferenceRequest_RequestData::MergeFrom(from.data());
    }
  }
}

void InferenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.InferenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceRequest::CopyFrom(const InferenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceRequest::IsInitialized() const {
  return true;
}

void InferenceRequest::Swap(InferenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferenceRequest::InternalSwap(InferenceRequest* other) {
  using std::swap;
  CastToBase(&datas_)->InternalSwap(CastToBase(&other->datas_));
  params_.Swap(&other->params_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceRequest::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceRequests::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceRequests::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceRequests::InferenceRequests()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_InferenceRequests.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.InferenceRequests)
}
InferenceRequests::InferenceRequests(const InferenceRequests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.InferenceRequests)
}

void InferenceRequests::SharedCtor() {
}

InferenceRequests::~InferenceRequests() {
  // @@protoc_insertion_point(destructor:inference.InferenceRequests)
  SharedDtor();
}

void InferenceRequests::SharedDtor() {
}

void InferenceRequests::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceRequests::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceRequests& InferenceRequests::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_InferenceRequests.base);
  return *internal_default_instance();
}


void InferenceRequests::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferenceRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceRequests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.InferenceRequests)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .inference.InferenceRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.InferenceRequests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.InferenceRequests)
  return false;
#undef DO_
}

void InferenceRequests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.InferenceRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.InferenceRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.InferenceRequests)
}

::google::protobuf::uint8* InferenceRequests::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferenceRequests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.InferenceRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferenceRequests)
  return target;
}

size_t InferenceRequests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferenceRequests)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .inference.InferenceRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceRequests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.InferenceRequests)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceRequests* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceRequests>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.InferenceRequests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.InferenceRequests)
    MergeFrom(*source);
  }
}

void InferenceRequests::MergeFrom(const InferenceRequests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.InferenceRequests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void InferenceRequests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.InferenceRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceRequests::CopyFrom(const InferenceRequests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferenceRequests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceRequests::IsInitialized() const {
  return true;
}

void InferenceRequests::Swap(InferenceRequests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferenceRequests::InternalSwap(InferenceRequests* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceRequests::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceResponse::kCodeFieldNumber;
const int InferenceResponse::kMessageFieldNumber;
const int InferenceResponse::kResultFieldNumber;
const int InferenceResponse::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceResponse::InferenceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_InferenceResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.InferenceResponse)
}
InferenceResponse::InferenceResponse(const InferenceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result()) {
    result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_body()) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:inference.InferenceResponse)
}

void InferenceResponse::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

InferenceResponse::~InferenceResponse() {
  // @@protoc_insertion_point(destructor:inference.InferenceResponse)
  SharedDtor();
}

void InferenceResponse::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InferenceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceResponse::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceResponse& InferenceResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_InferenceResponse.base);
  return *internal_default_instance();
}


void InferenceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      message_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      result_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      body_.ClearNonDefaultToEmptyNoArena();
    }
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.InferenceResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.InferenceResponse.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_result()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->result().data(), static_cast<int>(this->result().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "inference.InferenceResponse.result");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes body = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.InferenceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.InferenceResponse)
  return false;
#undef DO_
}

void InferenceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.InferenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceResponse.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // optional string result = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceResponse.result");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->result(), output);
  }

  // optional bytes body = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->body(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.InferenceResponse)
}

::google::protobuf::uint8* InferenceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferenceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional string message = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceResponse.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // optional string result = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->result().data(), static_cast<int>(this->result().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "inference.InferenceResponse.result");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->result(), target);
  }

  // optional bytes body = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->body(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferenceResponse)
  return target;
}

size_t InferenceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferenceResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string message = 2;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional string result = 5;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->result());
    }

    // optional bytes body = 6;
    if (has_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->body());
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.InferenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.InferenceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.InferenceResponse)
    MergeFrom(*source);
  }
}

void InferenceResponse::MergeFrom(const InferenceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.InferenceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_result();
      result_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_body();
      body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
    }
    if (cached_has_bits & 0x00000008u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InferenceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.InferenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceResponse::CopyFrom(const InferenceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferenceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceResponse::IsInitialized() const {
  return true;
}

void InferenceResponse::Swap(InferenceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferenceResponse::InternalSwap(InferenceResponse* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_.Swap(&other->result_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceResponse::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InferenceResponses::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InferenceResponses::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InferenceResponses::InferenceResponses()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_inference_2eproto::scc_info_InferenceResponses.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:inference.InferenceResponses)
}
InferenceResponses::InferenceResponses(const InferenceResponses& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inference.InferenceResponses)
}

void InferenceResponses::SharedCtor() {
}

InferenceResponses::~InferenceResponses() {
  // @@protoc_insertion_point(destructor:inference.InferenceResponses)
  SharedDtor();
}

void InferenceResponses::SharedDtor() {
}

void InferenceResponses::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InferenceResponses::descriptor() {
  ::protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InferenceResponses& InferenceResponses::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_inference_2eproto::scc_info_InferenceResponses.base);
  return *internal_default_instance();
}


void InferenceResponses::Clear() {
// @@protoc_insertion_point(message_clear_start:inference.InferenceResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InferenceResponses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inference.InferenceResponses)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .inference.InferenceResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inference.InferenceResponses)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inference.InferenceResponses)
  return false;
#undef DO_
}

void InferenceResponses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inference.InferenceResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.InferenceResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:inference.InferenceResponses)
}

::google::protobuf::uint8* InferenceResponses::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:inference.InferenceResponses)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inference.InferenceResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:inference.InferenceResponses)
  return target;
}

size_t InferenceResponses::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inference.InferenceResponses)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .inference.InferenceResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InferenceResponses::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inference.InferenceResponses)
  GOOGLE_DCHECK_NE(&from, this);
  const InferenceResponses* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InferenceResponses>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inference.InferenceResponses)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inference.InferenceResponses)
    MergeFrom(*source);
  }
}

void InferenceResponses::MergeFrom(const InferenceResponses& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inference.InferenceResponses)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void InferenceResponses::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inference.InferenceResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InferenceResponses::CopyFrom(const InferenceResponses& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inference.InferenceResponses)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InferenceResponses::IsInitialized() const {
  return true;
}

void InferenceResponses::Swap(InferenceResponses* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InferenceResponses::InternalSwap(InferenceResponses* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InferenceResponses::GetMetadata() const {
  protobuf_inference_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_inference_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace inference
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::InitParams* Arena::CreateMaybeMessage< ::inference::InitParams >(Arena* arena) {
  return Arena::CreateInternal< ::inference::InitParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::CreateParams_Env* Arena::CreateMaybeMessage< ::inference::CreateParams_Env >(Arena* arena) {
  return Arena::CreateInternal< ::inference::CreateParams_Env >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::CreateParams_File* Arena::CreateMaybeMessage< ::inference::CreateParams_File >(Arena* arena) {
  return Arena::CreateInternal< ::inference::CreateParams_File >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::CreateParams* Arena::CreateMaybeMessage< ::inference::CreateParams >(Arena* arena) {
  return Arena::CreateInternal< ::inference::CreateParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::InferenceRequest_RequestData* Arena::CreateMaybeMessage< ::inference::InferenceRequest_RequestData >(Arena* arena) {
  return Arena::CreateInternal< ::inference::InferenceRequest_RequestData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::InferenceRequest* Arena::CreateMaybeMessage< ::inference::InferenceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::inference::InferenceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::InferenceRequests* Arena::CreateMaybeMessage< ::inference::InferenceRequests >(Arena* arena) {
  return Arena::CreateInternal< ::inference::InferenceRequests >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::InferenceResponse* Arena::CreateMaybeMessage< ::inference::InferenceResponse >(Arena* arena) {
  return Arena::CreateInternal< ::inference::InferenceResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::inference::InferenceResponses* Arena::CreateMaybeMessage< ::inference::InferenceResponses >(Arena* arena) {
  return Arena::CreateInternal< ::inference::InferenceResponses >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
